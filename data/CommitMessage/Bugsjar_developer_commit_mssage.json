{"accumulo-9396979b": "add a metadata table constraint to require the bulk load transaction to be alive when writing the bulk-loaded flags", "accumulo-ea2f9856": "add a metadata table constraint to require the bulk load transaction to be alive when writing the bulk-loaded flags", "accumulo-25cf3ccd": "reverted previous change, which broke unit tests. Awaiting updated patch based on test failures and ticket discussions.", "accumulo-474b2577": "- credentials now getting properly read", "accumulo-742960f1": "applying patch from Corey Nolet", "accumulo-cfbf5999": "applying patch from Corey Nolet", "accumulo-e29dc4f5": "make update a oneway call again", "accumulo-9476b877": "applying Kevin Faro's patch to fix du on an empty table", "accumulo-c489d866": "applying Kevin Faro's patch to fix du on an empty table", "accumulo-813109d7": "mode some more methods in proxy throw table not found exception.  cleaned up proxy formatting.  made proxy throw more specific exceptions.", "accumulo-d9ab8449": "Test Connectors and serialization with destroyed tokens", "accumulo-6ff92b12": "merged patch to trunk", "accumulo-ef0f6ddc": "Applied patch from Mike Drob to 1.5 branch", "accumulo-4d10c92f": "Appled patch from Mike Drob, with modification to delete table in unit test.", "accumulo-6c565dfb": "Appled patch from Mike Drob, with modification to delete table in unit test.", "accumulo-994df698": "- Ryan Leary's patch with updates/warning busting", "accumulo-b082fc1e": "- merging Ryan Leary's patch, with modifications to update and remove warnings", "accumulo-fb25913c": "I jumped the gun", "accumulo-dc95cb69": "Patch from David M. Lyle that allows opening rfiles w/ multiple dots in name.", "accumulo-df4b1985": "Patch from David M. Lyle that allows opening rfiles w/ multiple dots in name.", "accumulo-b007b22e": "changed default behavior of Combiner and modified default test", "accumulo-0cf2ff72": "Thought this flag was gone in MAC, fixed now", "accumulo-13eb19c2": "Handle empty column family correctly for AccumuloInputFormat", "accumulo-872b6db3": "Reinsert changes inadvertently lost in cherry-pick", "accumulo-941e3cb1": "fixed input format w/ mock", "accumulo-2f0643a9": "merge to trunk", "accumulo-efef09b0": "merge to 1.4 branch", "accumulo-3143b9c5": "fix deletes, added test", "accumulo-8ec4cb84": "fix deletes, added test", "accumulo-6dbbdc21": "merged to trunk", "accumulo-cd7feb4d": "applied patch", "accumulo-8ad5a888": "changed toString methods of Key and created test for toString on a Key created with followingKey(...COLVIS)", "accumulo-c831e44d": "merged to trunk", "accumulo-2d97b875": "merge failed to pull null pointer checks from 1.4", "accumulo-a5e3ed3b": "merge to 1.5.1-SNAPSHOT", "accumulo-adee0f12": "Add data integrity checks to Key and Mutation", "accumulo-397f86f6": "applied patch", "accumulo-76d727f0": "merged to trunk", "accumulo-46f62443": "employed more TableNotFound / TableExists Exceptions in TableOperations - merged to trunk", "accumulo-add180fb": "employed more TableNotFound / TableExists Exceptions in TableOperations", "accumulo-15476a0d": "made mock accumulo sort incoming mutations the same as accumulo", "accumulo-3d55560a": "made mock accumulo sort incoming mutations the same as accumulo (merged from 1.4)", "accumulo-28294266": "InvocationTargetEx in TraceProxy", "accumulo-f2920c26": "match Value implementation to javadocs. check for null args.", "accumulo-0dc92ca1": "Delegate math to commons-math", "accumulo-a64151e6": "GC changes : disallow a delete marker of hdfs://nn/, log a warning about invalid delete, and add test for bad delete markers", "accumulo-7ec60f1b": "Fix match boundaries for MockTableOperations.deleteRows to be consistent with actual accumulo instance", "accumulo-019edb16": "Fall back to the configuration when the iterator setting aren't in the split", "accumulo-17344890": "Refactoring BlockedOutputStream to not recurse. With test", "accumulo-6138a80f": "fixing Michael Allen's patch and adding test", "accumulo-1f7dd2d5": "offset history command by one", "accumulo-ff8c2383": "added logic to handle null keys for MockTableOperations.deleteRow", "accumulo-9fcca2ed": "Return a more real tableID", "accumulo-31aea2ad": "Correctly handle older internals.", "accumulo-f99b5654": "Add equals, hashCode and toString to batchwriterconfig.", "accumulo-11d11e0d": "keep better info on what tablet counts will be after balancing", "accumulo-023be574": "(De)serialize IteratorSettings on RangeInputSplit(s).", "accumulo-2fd7633f": "(De)serialize IteratorSettings on RangeInputSplit(s).", "accumulo-5eceb10e": "Include the table id when constructing an absolute path from a relative.", "accumulo-d6472040": "check for viewfs", "accumulo-f848178e": "Ensure table name is serialized in RangeInputSplit.", "accumulo-94c2a31f": "Guard against failure due to multiple invocations of MAC.stop", "accumulo-17654199": "Set StatusCombiner on accumulo.metadata during initialize.", "accumulo-ddd2c3bc": "Offline scan property is now being properly serialized. Added verification that all other booleans are being serialized.", "accumulo-72fd6bec": "Set 0 for monitor log4j port config value", "accumulo-1b35d263": "Set the list separator to \\0 to 'disable' list interpretation", "accumulo-891584fb": "Format long as decimal integer, not floating-point", "accumulo-15e83709": "Spelling error, missing hashCode/toString/equals on ZKConnectionInfo, and some extra braces.", "accumulo-9d8cc45d": "ACCUMULO-307 merged from 1.4", "accumulo-97f16db4": "Fix for AccumuloVFSClassloader conflicting cache directories", "accumulo-a3267d3e": "Fix broken DateLexicoder ordering", "accumulo-81d25bc2": "fixed PreciseNumberType and wrote a unit test to make sure it really does precise numbers", "accumulo-27d4ee21": "Remove requirement for properties on provided token.", "accumulo-cfb832a1": "use the value of the delete flag (with test)", "accumulo-7651b777": "Remove configError and use config(String...) retval", "accumulo-9339ecf8": "Fix race condition where master might delete node before tserver sees deletion.", "accumulo-db4a291f": "ACCUMULO-379 ACCUMULO-375 merged from 1.4", "accumulo-73ce9cfb": "make Mutation#hashCode and Mutation#equals not change the state of the mutation", "accumulo-47c64d9a": "fix ClientConfiguration.getAllPropertiesWithPrefix and add test", "accumulo-699b8bf0": "Only request shutdown to master once for tserver", "accumulo-36225565": "Use provided zookeeper hosts for tracing when present.", "accumulo-5ca779a0": "more better hashCode", "accumulo-a2c2d38a": "Fixed bug with ByteBuffers thats do not start at 0", "accumulo-27300d81": "Fix incorrect usage of ByteBuffer", "accumulo-5594b2e0": "fix index search", "accumulo-be2fdba7": "merge to trunk", "accumulo-4d23d784": "Fix the description of -b options", "accumulo-50db442b": "Fix the description of -b options", "accumulo-eb0f9b41": "Merge branch 'ACCUMULO-4138' into 1.6", "accumulo-116d5928": "made GrepIterator a Filter to handle deletions - trunk", "accumulo-ebf22df0": "expanded javadocs and added deletion handling to Filter", "accumulo-8dad5e0f": "created test and fixed seek behavior of FirstEntryInRowIterator - merged to trunk", "accumulo-dc9f23d9": "made timestamp filter support longs greater than max date - merged to trunk", "accumulo-9453bcfa": "Applied patch from Drew Farris that allows mock to create tables w/o versioning (merged from 1.4)", "accumulo-a450ac2f": "unit test out-of-range keys returned from an iterator stack", "accumulo-65390f8c": "implement deleteRows in MockAccumulo, fake locality groups, ignore merge requests", "accumulo-692efde2": "made visibilityfilter catch badargument exception", "accumulo-4aeaeb2a": "fix combiners over iterators that mutate their top key", "flink-02c08456": "TypeExtractor now also supports nested Tuple-input derivation", "flink-27e40205": "TypeExtractor resolves also variables inside Tuple-input", "flink-22c370d9": "Fix incorrect getter / setter detection", "flink-259f10c0": "Handle unions at the root of the iteration", "flink-6ecd0f82": "Prevent partitionings on subsets of fields from being pushed down", "flink-45fb6d82": "Fix Optimizer to create plans when encountering incompatible partitionings.", "flink-94c8e3fa": "[optimizer] Correctly tag static/dynamic path for auxiliary nodes in iterations.", "flink-63ef8e86": "Fixed getter/setter recognition for POJOs", "flink-9cd96df7": "Adds the new basic types Void and Date to the TypeInfoParser", "flink-fb7ce0e3": "API] Fixes copy() methods in PojoSerializer for null values", "flink-91f9bfc7": "Allow Interfaces and abstract types in TypeExtractor", "flink-d033fa8f": "Fixes wrong input validation if function has no generics", "flink-0a4c7694": "[distributed runtime] Fix loss of events at uninitialized input channels", "flink-21f47d9c": "[runtime] Adds proper EOFException forwarding to KryoSerializer.", "flink-8f321c72": "Remove tailing slash from paths. Add tests for Path and FileOutputFormat.", "flink-1f726e48": "[streaming] add parallel iteration test", "flink-5308ac83": "[taskmanager] Fix hostname lookup.", "flink-380ef878": "Fix IndexOutOfBoundsException when receiving empty buffer", "flink-39d526e6": "Consistent behavior of numeric value parsers.", "flink-7164b2b6": "Fix for file paths with Windows drive letters", "flink-ccd574a4": "[runtime] Fixes NPE when TM receives a null input split", "flink-4dbf030a": "[runtime] Improve exception when bufferpools have been shut down.", "flink-adb321d6": "Fix NullPointerException in delta iteration due to missing temp", "flink-0078c44e": "Fix POJO deserialization for reuse objects with NULL fields", "flink-495a5c3c": "[streaming] Add ExecutionConfig serialization for streaming jobs", "flink-6bc6dbec": "Fix erroneous emission of Sliding Time PreReducer", "flink-0cfa43d7": "[streaming] Create own context for chained streaming operators", "flink-d594d024": "[runtime] Fix CancelTaskException handling", "flink-03340919": "Fix the recursive summation in FileInputFormat.addFilesInDir", "flink-fef9f115": "[streaming] Fix partitioned state next-input setting for copying chained collectors", "flink-a56aad74": "[runtime] Check if parent released before querying in-memory buffer in SpillableSubpartitionView", "flink-a41bc8cc": "handle the case of a non-public default ctor in TypeExtractor.analyzePojo", "flink-30761572": "[fix] FieldPositionKeys support Pojo fields", "flink-5546a1ef": "[java api] TypeExtractor returns wrong type info when a Tuple has two fields of the same POJO type", "flink-a17d4e82": "[runtime] Check parent state in isReleased() check of partition view", "flink-d738430c": "[streaming] BarrierBuffer releases temp files properly.", "flink-06e2da35": "[job manager] Checkpoint coordinator triggers checkpoints only when tasks are running.", "flink-948b6e05": "[core] Allow quoted strings in CSV fields to contain quotation character inside of the field, as long as its escaped Ex: 'Hi my name is \\'Flink\\''", "flink-ce68cbd9": "fieldsGrouping for multiple output streams fails  - added SplitStreamTypeKeySelector and JUnit tests", "flink-3e233a38": "[streaming] Set StateCheckpointer before default state value", "flink-63d9800e": "[streaming] Set state restore to lazy to avoid StateCheckpointer issues and reduce checkpoint overhead", "flink-8b40bb7a": "[streaming] Fix ArrayKeySelector", "flink-68912126": "Fixed FixedLengthRecordSorter write to multi memory pages issue and add more unit tests.", "flink-af477563": "[runtime] Fix hash table spilling partition selection.", "flink-b654e989": "[kryo] Fix Kryo serialization to clear buffered data", "flink-88a97768": "[streaming] Remove cyclic watermark dependencies for iterations", "flink-e494c279": "[streaming] KeySelectorUtil interacts well with type extraction", "flink-5dfc897b": "[streaming] FileMonitoring function logs on empty location", "flink-17e7b423": "Fix Avro getter/setter recognition", "flink-76bebd42": "[runtime] Fix broken spilling of MutableHashTable", "flink-59685903": "[streaming] Let AbstractUdfStreamOperator forward output type information to WindowFunction", "flink-5a86a0a1": "[runtime] Fix cancel during restart", "flink-a402002d": "[runtime] Disallow ExecutionGraph state transition from FAILED to RESTARTING", "flink-8dc70f2e": "[optimizer] Fix instantiation of bulk iteration candidates", "flink-937963e3": "[runtime] Defer start of checkpoint ID counter", "flink-a5b05566": "Fix argument parsing of CLI client INFO action", "flink-117ba95f": "[runtime] Return empty stats for unknown operator", "flink-44061882": "Fix colocation group re-instantiation", "flink-6968a57a": "[runtime] Enforce terminal state of Executions", "flink-ed3810b1": "Disable reference tracking in Kryo fallback serializer", "flink-8fc7e7af": "[streaming] Fix case where early cancel messages do not properly cancel a stream operator.", "flink-8e3e2f8f": "[runtime] Fix checkpoint statistics state size overflow", "flink-d90672fd": "[runtime] Fix interplay of automatic Operator UID and Changing name of WindowOperator", "flink-734ba01d": "[runtime] Prevent canceling Execution from failing", "flink-434e88fd": "[FLINK-3563] [core] TypeExtraction input type validation fixes", "flink-e3759a5e": "[cep] Add proper watermark emission to CEP operators", "flink-f2f5bd5b": "Make Session Window State Checkpointed", "flink-494212b3": "Fix StateDescriptor.readObject", "flink-dc78a747": "[core] Enable Kryo reference tracking", "flink-32a003d5": "Fix for bug in union replacement", "wicket-7e1000dd": "", "wicket-b154d12f": "", "wicket-01a3dd66": "", "wicket-3431e60d": "Make sure that bookmarkable urls for classes containing non-ascii characters is encoded properly.", "wicket-6c5083b4": "Make sure that bookmarkable urls for classes containing non-ascii characters is encoded properly.", "wicket-bb7f9cf5": "check successful rendering of page before validating headers", "wicket-99e22ce4": "bug fix for http://issues.apache.org/jira/browse/WICKET-172 1> remove(child) would only look at the id, not at the instance. 2> addedComponent was first called before removedComponent (switched) some code cleanup.", "wicket-5226978a": "Fixed testing things that require cookies persisted over multiple requests, such as CSRF protection in a hidden Form fields. An even more straight forward option would have been to remove clearing cookies in MockWebApplication.initialize(), and copy cookies to each request from response, because after all the lifecycle of a WicketTester (MockWebApplication) instance should be such that cookies could be preserved there.", "wicket-8ee095bf": "StatelessForm submitted to the wrong page Issue: WICKET-1897", "wicket-986848f7": "", "wicket-420ac965": "&amp; instead of & in javascript Issue: WICKET-2033", "wicket-e2d88568": "", "wicket-0578d6ee": "", "wicket-9da430fb": "", "wicket-ceac38b1": "", "wicket-b224bad8": "Fixing AjaxTimerBehaviorTest. It looks ok. The rendered outputs in both an AJAX and NOT-AJAX situation looks fine (escaping of \" is correct). JBQ, please use Java1.4 in any wicket1.x projects which requires this (String.replace(String, String) doesn't exist in 1.4)", "wicket-ea4a3f8a": "fixed WICKET-2172 PageParameters construced with keyValuePairs does not handle array values Issue: WICKET-2172", "wicket-d79d0192": "fix needed additional adjustment Issue: WICKET-2181", "wicket-24ac1a35": "fixed: Form gets submitted using AjaxSubmitBehavior when sub-form has error's Issue: WICKET-2202", "wicket-089303f4": "fixed and added test case: wicketTester.executeAjaxEvent(combo, \"onchange\"); works with 1.4-rc1 but not anymore with 1.4-rc2 Issue: WICKET-2261", "wicket-6e0b40bc": "fixed: MockHttpServletRequest is broken when used with CryptedUrlWebRequestCodingStrategy Issue: WICKET-2281", "wicket-96330447": "", "wicket-36a41358": "IndexOutOfBoundsException when PropertyResolver is using an invalid list index PropertyModel does not support index only property (\"[0]\") Issue: WICKET-2337,2354", "wicket-cd281092": "Localization messages stops working with validators since 1.4-rc2 Issue: WICKET-2350", "wicket-fae1601b": "fixed: Page.checkRendering fails after setting BorderBodyContainer visiblity to false Issue: WICKET-2368", "wicket-0f8a2990": "fixed:  Regression: \"Could not find child with id: <ID> in the wicket:enclosure\" for non-component tag Issue: WICKET-2506", "wicket-12e1f39b": "fixed CreditCardValidator accepts invalid inputs Issue: WICKET-2552", "wicket-9ced53a5": "fixed: Inheritance layout excludes XML header from output Issue: WICKET-2569", "wicket-7da4ad17": "EnumChoiceRenderer fix Issue: WICKET-2609", "wicket-c849f986": "Issue: WICKET-2621", "wicket-ef880545": "fixed MethodGetAndSet.setValue uses wrong source to determine which type to convert to when there's no setter Issue: WICKET-2624", "wicket-15477252": "ajax not working due to bugs in resource handling Issue: WICKET-2839", "wicket-ebe56869": "fixed WICKET-2882: IComponentResolver usage with Enclosure Issue: WICKET-2882", "wicket-0e70ce39": "look for bean definition in parent contexts WICKET-2901: only return a primary bean if it's the only one", "wicket-5c592d85": "WebRequestCodingStrategy: path mounting and matching", "wicket-3d8c9d75": "Adding a component in Component#onInitialize() leads to StackOverflowError", "wicket-0b4f78cc": "ClassCastException when requesting for non-page class", "wicket-b293b75c": "HomePageMapper ignores request to '/' with query string parameters", "wicket-d3dc9a50": "UrlUtils.isRelative returns false if URL parameter contains an absolute URL", "wicket-1b7afefc": "Issue: WICKET-3098", "wicket-4d7f7359": "meh. this caching will probably slow things down. and it can be difficult to find all the places in code where caching should be invalidated. lets hold off until it is a hotspot. Issue: WICKET-3166", "wicket-0cf14725": "Issue: WICKET-3174", "wicket-f1c0f263": "Issue: WICKET-3196", "wicket-be70e608": "fixed WICKET-3197: addOrReplace() failed with exception while copying markupId Issue: WICKET-3197", "wicket-5729ed90": "fixed WICKET-3222 AbstractMarkupParser doesn't remove Comments correctly Issue: WICKET-3222", "wicket-71b6e905": "- Preventing the attempt to resolve the property class for a null target at AbstractPropertyModel - Test asserting that there is no problem in working with an AbstractPropertyModel targeting an IObjectClassAwareModel not initialized with an known class. Issue: WICKET-3253", "wicket-c86b972a": "Set an request parameter on Wicket tester do not add it in the request URL", "wicket-60d07288": "DropDownChoice no selection value", "wicket-295e73bd": "IResponseFilter doesn't work in 1.5", "wicket-71499e17": "UrlAttributes are encoded incorrectly when style is null but variation is not", "wicket-7e7ab76c": "Issue: WICKET-3304", "wicket-debca73b": "Testing for not presented root nodes on root less trees Issue: WICKET-3309", "wicket-ddf7e8a2": "Links with multiple parameters are wrongly generated WICKET-2829 Tag attributes values are not escaped properly during writeOutput", "wicket-499a9c6b": "FLAG_INHERITABLE_MODEL and default model change", "wicket-be97d017": "Test case preventing problems during the page serialization process outside Wicket lifecycle Issue: WICKET-3420", "wicket-ffc0cae9": "Issue: WICKET-3428", "wicket-f1e854b3": "fixed: Value exchange in a wicket:message throws an exception (if inside a border) Issue: WICKET-3454", "wicket-f30bd1cb": "Issue: WICKET-3455", "wicket-292a2582": "", "wicket-4a875f46": "Mapping ResourceReferences to Urls is slow", "wicket-2b6da516": "SimpleTree example not working with CryptoMapper", "wicket-d1b62639": "SHOW_NO_EXCEPTION_PAGE responding with HTTP status 500 is overwritten by redirect", "wicket-a4459ef4": "Issue: WICKET-3539", "wicket-c62b66c1": "Interaction betwen IAjaxRegionMarkupIdProvider, renderPlaceholderTag and visibility", "wicket-5e2c6702": "Wicket 1.5 RC-3 Bug with conditional comments", "wicket-7c364566": "DatePicker issues with locale medium date format", "wicket-aa1d177a": "DataTable row groups are present in markup even when they contain no rows.", "wicket-7ae109a6": "Using render strategy ONE_PASS_RENDER fails for Ajax requests", "wicket-fbfd17e6": "improving BufferedWebResponse to invoke set header actions before write in response. Issue: WICKET-3618", "wicket-1a2bc1bc": "Changing AjaxRequestTarget and BufferedWebResponse to don't discard the filtered AppendingStringBuffer response if the filter returns a new instance. Issue: WICKET-3620", "wicket-ab1856db": "Improved exception handling strategy to not fail when multiple handlers are returned: just use the first one that is available. Issue: WICKET-3644", "wicket-12124902": "No more calling of requestcyclelistener#onScheduleHandler with null handler Issue: WICKET-3646", "wicket-1b57b51c": "Fixed a regression between Wicket 1.4 and 1.5, where markup ID generation/retrieval caused runtime exceptions in cases where the component was not added to the Page yet. Improved the semantics of Component#getMarkupId() and encased it in a couple unit tests. Issue: WICKET-3647", "wicket-a08562a7": "quickie test fix, need to think some more about this :/ Issue: WICKET-3702", "wicket-e1168a57": "org/apache/wicket/protocol/http/request/UserAgent matches method is not correct", "wicket-557de7bc": "Improving the FileUpload#writeToFile method to not rely on HTTP session existence Issue: WICKET-3715", "wicket-5ad32df9": "fixed: Component's markup cannot be found in Ajax requests if the parent is transparent Issue: WICKET-3719", "wicket-1858bc18": "The Url's query parameters are not properly URL encoded", "wicket-48454f4d": "Ajax behaviors are failing in stateless pages", "wicket-84c3baac": "Issue: WICKET-3767", "wicket-b4e9d426": "WicketSessionFilter and HttpSessionStore use different attribute name for Wicket Session", "wicket-30255f11": "WicketTester does not follow absolute redirects: make Url.parse(..) capable of parsing absolute urls", "wicket-747bccb5": "WicketTester does not follow absolute redirects", "wicket-843b76b1": "regression on strategy to integrate cas authentication", "wicket-97514205": "In wicket 1.5 urlFor returns incorrect string for package mounted pages", "wicket-afc7034d": "allow empty header values since they are valid based on RFC2616", "wicket-d1e0e411": "fixed: AbstractTransformerBehavior sets wrong namespace Issue: WICKET-3861", "wicket-3feb0e3a": "- detach models recursively Issue: WICKET-3872", "wicket-b772ff87": "Null model for AttributeAppender should not render empty attribute", "wicket-beb9086d": "setResponsePage in AjaxLink goes always to localhost:8080 instead to the right host and port", "wicket-aadaa4e9": "PageParameters#set not follow INamedParameters#set behavior", "wicket-8fbdc68f": "Component markup caching inconsistencies", "wicket-6051019b": "A (stateless) page immediately disappears after the first render", "wicket-6a8fc1cc": "fixed by letting the sourcing strategies also look for transparent containers Issue: WICKET-3989", "wicket-b76f9c44": "CreditCardValidator returns incorrect cardId for VISA", "wicket-38e928c1": "Header contributions order is not stable", "wicket-d35d2d85": "Component's onAfterRender() is called so many times as it is depth in the component tree + 1", "wicket-e60bac5f": "Wicket 1.5 Form Post Action and Link Get discard Page Class Information", "wicket-f1c9cef2": "MarkupContainer.toString(true) fails with MarkupNotFoundException if the call is made in the component constructor", "wicket-081cdeb2": "ResourceMapper throws IllegalStateException when attempting to map a request to a URL ending in a empty segment (directory)", "wicket-5f69685d": "Issue: WICKET-4030", "wicket-f3d7565c": "Don't create an empty PageParameters if the original is null.", "wicket-4d3d1f85": "RestartResponseAtInterceptPageException.InterceptData is never cleared", "wicket-d450acb0": "Issue: WICKET-4070", "wicket-7d5b8645": "", "wicket-1dcaec98": "SmartLinkLabel doesn't recognize already tagged links", "wicket-e743fd7e": "Issue: WICKET-4102", "wicket-64656c98": "Using ajax to update a component that has an AbstractTransformerBehavior attached throws a ClassCastException", "wicket-8f7805f8": "AutocompleteTextField after Submit does not work - PageProvider no longer pushes PageParameters into previously stored pages.", "wicket-4624ab3d": "Ajax link reports wield error when session is expired", "wicket-bb7a6995": "FileResourceStream returns unknown content type", "wicket-8967eb2b": "let wizard initialize its own steps", "wicket-7c89598a": "BookmarkablePageLinks not working on a forwarded page", "wicket-2737d7c7": "visibility is now checked in onInitialized", "wicket-84bbbf68": "Incorrect URL for setResponsePage() within a Form#onSubmit( )", "wicket-a0150366": "", "wicket-5fd03973": "ListenerInterfaceRequestHandler should not assume existence of a page", "wicket-53bcb78d": "Multipart Form and AjaxSubmitLink will result in invalid redirect after user session expires", "wicket-c250db9c": "allow longer authorities in the url, such as \"local\" Issue: WICKET-4255", "wicket-09166ea8": "block onbeforerender() from being called if auth strategy vetoes render action Issue: WICKET-4256", "wicket-1f128536": "Preventing the AjaxEditableLabel from loose its model object type when initializing its editor component Issue: WICKET-4259", "wicket-925cae5c": "remove leading dot in sendRedirect()", "wicket-32c76c4a": "Select keep selection on form error", "wicket-4a6a573b": "Really fix WICKET-428, complete with unit test.", "wicket-d906576c": "More fixes off the back of WICKET-428, this time for MicroMap.", "wicket-e1953357": "take page parameters from page for links on mounted pages", "wicket-9cb617ae": "MockHttpServletResponse.addCookie(Cookie) adds duplicate cookies", "wicket-50b52742": "ByteArrayResource throws error if data is null", "wicket-b4274415": "StringValueConversionException for correct situation", "wicket-e24874da": "StringResourceModels doesn't seem to detach properly", "wicket-9decad35": "POST params ignored by IPageParametersEncoder#decodePageParameters()", "wicket-4f08e6f2": "CryptoMapper does not work for applications having a home page that needs query parameters", "wicket-02ebc8ae": "BufferedWebResponse fails to add/clear cookie in redirect", "wicket-1485a856": "Form components' name/value are encoded in stateless form's action url", "wicket-7ca927c1": "HttpSession getSession() in MockHttpServletRequest is not compliant with the j2ee servlet spec", "wicket-7a162f77": "org.apache.wicket.validation.ValidatorAdapter class causes problem with validator properties to be loaded", "wicket-614e3b50": "cleaning up PageParameters in AbstractBookmarkableMapper returns an empty instance if no parameters are left after sanitizing instead of 'null' which by wicket definition indicates that we have no page parameters", "wicket-5d64196a": "XsltOutputTransformerContainer not necessarily has xsl markup type", "wicket-f88721fd": "Any empty url-parameter will make wicket 1.5 crash", "wicket-246d53c5": "(with aggressive cleanup, but with the option to override)", "wicket-54c86ebb": "PageProvider should create a new Page instance if PageParameters are changed, even if a stored page exists.", "wicket-2624d2db": "SmartLinkLabel escape minus in pattern", "wicket-53442bb4": "Component#setDefaultModel() should call #modelChanging()", "wicket-e6582c52": "URL with a previous page version ignores requested page based on mount path", "wicket-35843c19": "HtmlHandler wrongly handles tags not requiring closed tags if the markup does not have \"top\" level tag", "wicket-a4caaa57": "unescape markup attribute during parsing, don't unescape while rendering", "wicket-b672cb2d": "url must be decoded for local files", "wicket-4ee5ad1f": "Stack overflow when render malformed html.", "wicket-a88882f7": "remove empty segments when resolving relative url", "wicket-e62ded51": "discrepancy between JavaDoc and code in MarkupContainer#visitChildren()", "wicket-b91154ea": "Inline enclosure doesn't work if wicket:message attribute is used on the same tag", "wicket-ccb8fc9e": "Inline enclosure doesn't work if wicket:message attribute is used on the same tag", "wicket-9a6a06be": "NullPointerException in org.apache.wicket.markup.html.form.ValidationErrorFeedback", "wicket-dfc56674": "DiskDataStore returns the wrong page when the page disk space is full", "wicket-c66cf607": "Link always causes Page to become stateful, regardless of visibility", "wicket-556a2236": "Do not use the parsed PageParameters when re-creating an expired page", "wicket-5e1bf8d8": "added test that stateless pages get page parameters", "wicket-9dab1bb5": "bug in Duration.toString(Locale locale)", "wicket-b19a3d69": "WicketTester.assertRedirectUrl always fails because it always thinks the redirect was null", "wicket-dd1df04b": "onError now called post-order, just like onSubmit", "wicket-ef3adb12": "last visible tab's css", "wicket-ccd74641": "preventing exceptional responses from being cached and overlay next requests replay on the same address", "wicket-2fcb3417": "Complement for WICKET-4664", "wicket-f3ec1503": "XmlPullParser doesn't parse correctly attributes with complex namespace", "wicket-89184b79": "MountMapper does not support correctly parameter placeholders", "wicket-f5f802c5": "MIN_VALUE of Double and Float is not minimum number", "wicket-4fc82e35": "WebApplication doesn't recognize if an incoming request is multipart.", "wicket-6a1b2f61": "'exact' variable is missing", "wicket-a7ce7f91": "fileNameModel wrapOnAssignment and detach", "wicket-21a47387": "unwrap wrapped header items when resolving bundles", "wicket-87ae870f": "cast if possible", "wicket-fd910746": "fix form validation bug where form components would remain invalid until their error messages were rendered", "wicket-2f1ece4b": "JavaScriptStripper fails with single line comments", "wicket-cda34428": "render PageHeaderItems all at once", "wicket-1ac05533": "keep multiple named values and absent indexed values", "wicket-eccb3b11": "JavaScriptReference escapes given URL", "wicket-6f0863f4": "url rendering regression: keep trailing empty segment if base still has segments but relative has not", "wicket-66bfc885": "Handling of semicolons in form action URLs", "wicket-ad849602": "set port explicitly, it won't be rendered by UrlRenderer if not required", "wicket-8b294488": "ConverterLocator should create a new instance for all date based converters", "wicket-ce172da8": "Return error code 400 when an Ajax request has no base url set in header/request parameters.", "wicket-6470c3f7": "semicolon (;) starts segments if no slash is present", "wicket-d78132be": "additional query parameters have to be added to the new url", "wicket-8c827e33": "allow headers to be set even if meta data is no longer buffered", "wicket-f20b2d70": "testing recreateMountedPagesAfterExpiry before to recreate a mounted page", "wicket-a4a3a9a6": "replace space with non-breaking space between digits only", "wicket-ee02c883": "more restrictive condition for using bookmarkable urls", "wicket-917dd2b5": "cache minified name correctly", "wicket-2b1ce91d": "Page not mounted with WebApplication#mountPackage", "wicket-56169634": "Page mount with an optional named parameter overtakes a mount with more specific path", "wicket-8e6a6ec5": "fail early if fragment markup is no fragment tag", "wicket-6e794ad0": "404 Error on Nested ModalWindows in IE7 and IE8", "wicket-a2f848f2": "404 Error on Nested ModalWindows in IE7 and IE8", "wicket-d3d42d42": "404 Error on Nested ModalWindows in IE7 and IE8", "wicket-faaae8d3": "404 Error on Nested ModalWindows in IE7 and IE8", "wicket-381b90fd": "Cookies#isEqual(Cookie, Cookie) may fail with NullPointerException", "wicket-217fbb3b": "ensure consistent JavaScript ordering with Wicket's IHeaderRenderStrategy for Ajax responses and removing special handling of Ajax response in AjaxEventBehavior, i.e. not calling appendJavaScript()", "wicket-581c7306": "make id of enclosure stable in markup so that InlineEnclosure is resolved once only", "wicket-ba516f02": "AbstractOptions does not use its model", "wicket-74e77676": "enforce mount for mounted pages only", "wicket-d110e307": "", "wicket-ed780cc7": "parentheses are valid in url path", "wicket-518c933b": "Url#toString(StringMode.FULL) throws exception if a segment contains two dots", "wicket-4b7367ef": "Problems with cookies disabled when using 301/302 and also 303 (even with cookies)", "wicket-e8dab4a0": "", "wicket-184e51e9": "Merge remote-tracking branch 'upstream/master' into bugfix-WICKET-5147-cookies-wickettester-second-try", "wicket-961f2477": "URL query parameter values containing equals sign get cut off", "wicket-0d4d1df7": "Session should be bound when adding messages to it", "wicket-34634266": "StringResourceModel doesn't detach model in some cases", "wicket-2293764f": "Base url is incorrect for error dispatched pages", "wicket-9e6efa61": "The DateTimeField.onBeforeRender() method does not format the fields correctly.", "wicket-55eb5212": "NPE when using ComponentRenderer.renderComponent on a panel with <wicket:enclosure>", "wicket-8e518d88": "CDI integration fails in Glassfish 4.0 with WELD-000070", "wicket-9c8f658a": "use #isValid() instead of #hasErrorMessage() as the FormComponent does too", "wicket-b61fe92c": "Wicket generates invalid HTML by expanding col tags", "wicket-44a4132f": "don't map handler when value for required placeholder is missing", "wicket-6122df49": "", "wicket-3d2393c7": "Merge branch 'WICKET-5251' of https://github.com/CedricGatay/wicket into WICKET-5251", "wicket-6ce34ccf": "", "wicket-a9e56e1e": "Fix WICKET-5259: skip username+password when searching for portnumber", "wicket-0eb596df": "recreate fence mark when removing and readding a fencedfeedbackpanel", "wicket-c863b032": "do not encrypt full urls", "wicket-ded3c583": "Wicket doesn't encrypt links and Ajax URLs when CryptoMapper is used", "wicket-3fc7234e": "Url.canonical() breaks when there are two consecutive \"parent\" segments followed by a normal segment", "wicket-61122bab": "fixed equals for different locales", "wicket-19e7c1cd": "don't use possibly conflicting encoding from XML declaration when parsing a String", "wicket-6cefb9f8": "Behaviors#internalAdd(Behavior) erroneously gets id for stateless behaviors", "wicket-87fa630f": "BOM in UTF markup file breaks encoding detection", "wicket-e350f19e": "properly handle groups in NonNull constraint", "wicket-fb45a781": "reset stateless flag on render, since stateful components might be added *and* removed", "wicket-8ccb1f6d": "IResourceCachingStrategy implementations should only set caching if version matches", "wicket-a382917f": "fixed Time.getHour() to use 24-hour clock", "wicket-2abc18f1": "close generated divs", "wicket-a3a5a40f": "always reset FLAG_PREPARED_FOR_RENDER, so stateless page is re-prepared before next render", "wicket-c1c1f794": "watch out for null component; break early from method", "wicket-813d8bee": "don't request a group's markup, since this will result in a log warning if the group does render its body only (the default) - formerly encoding of the group's markup id in the check/radio's CSS class is no longer needed with WICKET-4797 anyway", "wicket-ecdfc124": "rendering and writing of a page should never happen on an Ajax request, even if other circumstances imply otherwise", "wicket-a79ed51e": "WebPageRenderer should honor RedirectPolicy.ALWAYS_REDIRECT more consistently", "wicket-724066f4": "NPE in JsonUtils when the value is null", "wicket-825da305": "Ignore the path parameters when reading the page class", "wicket-6cceff44": "DefaultPropertyResolver does not respect JavaBean conventions", "wicket-c2e12216": "support unmodifiable collections as well as models without setter", "wicket-5b730c0b": "Failing HTTPS redirect to RequireHttps annotated pages with ONE_PASS_RENDER strategy", "wicket-f1af9e03": "initialize Page before calling into instantiationListeners", "wicket-aa82ccfc": "BookmarkableMapper now checks if a page is mounted to work properly if we use CryptoMapper and we are enforce page mounting", "wicket-204849bc": "PackageMapper - Could not resolve class", "wicket-44f4782a": "PackageMapper issue [WICKET-5565]. The compatibility score is not correct.", "wicket-5efb8091": "Unable to find markup for children of deeply nested IComponentResolvers during Ajax response", "wicket-57d8f051": "Rescheduling the same ajax timer behavior causes memory leak in the browser", "wicket-cd414fa5": "Dequeueing problem when there is TransparentWebMarkupContainer around <wicket:child/>", "wicket-5cdc1c8d": "Stateless/Statefull pages - incorrect behaviour", "wicket-1fb66533": "absolute URLs stay absolute after encoding", "wicket-240ab3c3": "OnChangeAjaxBehavior attached to DropDownChoice produces two Ajax requests in the last versions of Chrome, Opera and IE", "wicket-d558004b": "clear FLAG_INHERITABLE_MODEL reliably", "wicket-f539c18c": "PropertyResolver does not scan for NotNull in annotation tree", "wicket-9aec4f33": "@SpringBean(name=\"something\", required=false) still throws org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'something' is defined", "wicket-8e794fc4": "@Inject should require the bean dependency instead of setting null", "wicket-2ac29d30": "Nested Redirects and REDIRECT_TO_BUFFER", "wicket-f45ce896": "WebApplication#unmount() unmounts the whole compound mapper if some of its inner ones matches", "wicket-087c0a26": "WebSocketRequestHandler is not set as a scheduled and thus RequestCycle#find(AjaxRequestTarget.class) doesn't work", "wicket-0f8a6d75": "ResourceUtils.getLocaleFromFilename cannot handle filenames with classifiers", "wicket-5837817c": "OnChangeAjaxBehavior should listen for both 'inputchange' and 'change' events for TextField and TextArea", "wicket-145da021": "SecuritySettings.setEnforceMounts() does not work when the mounted mapper is not in the root compound mapper", "wicket-2fc6a395": "Method Strings.join doesn't work correctly if separator is empty.", "wicket-b92591f6": "Queueing component in autocomponent", "wicket-3cc3fe95": "Component queuing breaks with html tags that don't require close tag.", "wicket-71674df5": "Problem with WICKET-4441 and RestartResponseAtInterceptPageException", "wicket-bcea89fc": "NullPointerException in IntHashMap WICKET-5584 DiskDataStore error", "wicket-0374c040": "AjaxRequestAttributes extra parameters aren't properly handled in getCallbackFunction()", "wicket-cf6172bd": "PageParametersEncoder should not decode parameters with no name", "wicket-7b8b6767": "Multiple events in AjaxEventBehavior with prefix 'on'", "wicket-b6259e5f": "fixed copying of requests", "wicket-b1f4e6a3": "URL IPv6 parsing", "wicket-e93fdd5a": "Last-modified header of external markup is ignored", "wicket-b80f6640": "and WICKET-5861: number converters are based on BigDecimals now", "wicket-8c83c5c5": "FormComponent#updateCollectionModel must check convertedInput for null before wrapping into ArrayListFormComponent#updateCollectionModel must check convertedInput for null before wrapping into ArrayList", "wicket-cd3b9234": "Feedback messages not cleared for invisible/disabled form components on submit.", "wicket-2d9ebf9a": "Parsing of ChinUnionPay credit card should use the first 6 characters", "wicket-b00920f3": "avoid to search component resolvers inside transparent containers", "wicket-ffdd0864": "method searchMarkupInTransparentResolversrewritten to use container markup fragment", "wicket-def03add": "StackOverflowError in LoadableDetachableModel", "wicket-03663750": "drop headerResponse and renderedComponentsPerScope in #onAfterRender(), so a second rendering re-renders the header", "wicket-86066852": "Queuing a component within an enclosure", "wicket-31c88569": "Queuing a component in head", "wicket-d547fcd4": "Fixed locale from resource filename", "wicket-8b7946d8": "CachingResourceLocator lookup key doesn't take strict into account", "wicket-294b0b2f": "Servlet 3 Filter path calculated wrong", "wicket-eb125865": "Fix the behavior of MarkupContainer#get(int) for non-empty MarkupContainer and non-existing index", "wicket-a255bbca": "BaseWicketTester#startComponentInPage fails for pages with <wicket:header-items></wicket:header> placeholder", "maven-1bdeeccc": "PR: MNG-1205", "maven-4e955c05": "PR: MNG-1509 Submitted By: Bernd Bohmann Reviewed By: John Casey", "maven-b68c84b8": "[MNG-1703] <pluginManagement><dependencies> is not propagated to child POMs Submitted by: Edwin Punzalan", "maven-5d99b35c": "[MNG-1797][MNG-2420] Fixing exclusions that bleed over into other dependencies, and modifying DefaultProfileManager to (a) deprecate constructor that takes Settings but no properties, and (b) add a constructor that takes Settings and properties.", "maven-faa5cf27": "[MNG-1856] fix inheritance of the distribution management section and add tests", "maven-24db0eb9": "Dependencies in two paths are not added to resolution when scope needs to be updated in the nearest due to any of nearest parents PR: MNG-1895", "maven-806eaeb0": "[MNG-1895] merge changes from branch", "maven-ad38e46b": "[MNG-1999] fix reporting > excludeDefaults inheritance", "maven-778f044e": "[MNG-2174] Profile bug dealing with dependencies : [MNG-3877] Reporting directory base aligned.", "maven-cc859f5c": "[MNG-2221] Fixing caching of merged plugins to prevent them from appearing/executing twice in the resulting child POM. See two new unit tests in ModelUtilsTest for proof.", "maven-f0fcef7e": "[MNG-2281] 1.0-beta-3 should be < 1.0-SNAPSHOT", "maven-b92af0e4": "[MNG-2408] Modification to keep metadata files from writing when the main version is LATEST or RELEASE (these are meta-versions).", "maven-06090da4": "PR: MNG-2712", "maven-d7422212": "[MNG-2931] DefaultArtifactCollector changes the version of the originatingArtifact if it's in the dependencyManagement with another version", "maven-5ffd8903": "[MNG-3092] Version ranges with non-snapshot bounds can contain snapshot versions Submitted by: Mark Hobson", "maven-56cd921f": "MNG-3131: Error message is misleading if a missing plugin parameter is of a type like List", "maven-f6f4ef5e": "[MNG-3131] Error message is misleading if a missing plugin parameter is of a type like List", "maven-912a565f": "[MNG-3616] Null Pointer Exception when mirrorOf missing from mirror in settings.xml", "maven-2169c4a3": "[MNG-3991] POM validator allows <scope>optional</scope> but it is not valid.", "maven-0f3d4d24": "[MNG-4383] Uninterpolated expressions should cause an error", "maven-269c956e": "[MNG-4474] [regression] Wagon manager does not respect instantiation strategy of wagons", "maven-8cb04253": "[MNG-4512] [regression] Profile activation based on JDK version range fails if current version is close to range boundary", "maven-f5ebc72d": "[MNG-4518] Profile activation based on JRE version misbehaves if java.version has build number", "maven-03a383e3": "[MNG-4529] maven fails on IBM JDK 1.5.0 with exception IllegalAccessException: Field is final", "maven-c6529932": "Add solution to http://jira.codehaus.org/browse/MNG-4565", "maven-83389c34": "[MNG-4648] NullPointerException thrown from DefaultPluginRealmCache#pluginHashCode method if project-level plugin dependency misses version", "maven-bb39b480": "[MNG-4695] Missing Error during pom validation: \"You cannot have two plugin executions with the same (or missing) <id/> elements.\"", "maven-8cdb461f": "[MNG-4761] Fixing unit tests. system scope has to be preserved in plugin-level deps.", "maven-3fca2bb2": "[MNG-4837] Interpolation error due to cyclic expression for one of the POM coordinates gets needlessly repeated", "maven-1c3abfba": "[MNG-4915] Versions in pom.xml are not checked for invalid characters", "maven-691a03a7": "[MNG-4918] MavenProject#clone() doubles active profiles Submitted by: Sebastian Annies", "maven-469d0096": "[MNG-4933] With a resource directory as . maven raise an java.lang.StringIndexOutOfBoundsException:217", "maven-c4002945": "[MNG-4941] PluginDescriptorBuilder doesn't populate expression/default-value fields for mojo parameters", "maven-a7d9b689": "MNG-5003 populate mojo descriptor with cached plugin realm", "maven-2eb419ed": "[MNG-5075] MavenProject.getParent throws undocumented ISE", "maven-87884c7b": "[MNG-5209] MavenProject.getTestClasspathElements can return null elements Submitted by Jesse Glick.", "maven-ed651a4d": "[MNG-5209] MavenProject.getTestClasspathElements can return null elements Submitted by Jesse Glick.", "maven-712c4fff": "MNG-5212 preserve PluginDescriptor dependencies in descriptor cache", "maven-c53d95ce": "MNG-5212 preserve PluginDescriptor dependencies in descriptor cache", "maven-c225847e": "[MNG-5459] failure to resolve pom artifact from snapshotVersion in maven-metadata.xml", "maven-bef7fac6": "[MNG-5613] fix NullPointerException when error occur during project dependency graph creation Submitted by: Sebastian Le Merdy <sebastian.lemerdy@gmail.com> From: https://github.com/apache/maven/pull/13", "maven-af1ecd5f": "MNG-5645: When a number is not used in a version correctly, provide a better error. Submitted by: Phil Pratt-Szeliga", "maven-cdb8ad6d": "[MNG-5647] ${maven.build.timestamp} uses incorrect ISO datetime separator", "maven-96337372": "MNG-5655 deduplicate WeakMojoExecutionListener instances", "maven-3d2d8619": "[MNG-5687] Parallel Builds can build in wrong order", "maven-2d0ec942": "[MNG-5716] Add unittests for DefaultToolchainManagerPrivate", "maven-ce6f0bfd": "MNG-5727 fixed cryptic exception when managed depenency has no <version>", "maven-6ab41ee8": "MNG-5742 fixed null ComponentDescriptor#realm for extensions plugins", "camel-205420e2": "Fixed setting result message on Exchange when pipeline copy result back to exchange.", "camel-f7dd2fff": "Java DSL now fails fast if onException and the likes are not configured before routes, which they must.", "camel-4badd9c5": "Fixed property placehodler resolution on EIP in nested sub routes.", "camel-0919a0f6": "Fixed @OutHeaders when exchange is InOnly.", "camel-18e1a142": "Fixed splitter not using error handling if exception was thrown during evaluation of next splitted piece to use.", "camel-8433e6db": "Fixed Splitter not setting correltion correlation id from splitted exchange to their parent exchange.", "camel-320545cd": "Patch applied with thanks", "camel-e76d23b0": "Fixed in predicate to handle null results from expressions.", "camel-b345dd82": "Fixed issue with route scoped onException may pickup an onException from another route. Also fixes so it now prefers route scoped over context scoped.", "camel-b4606700": "Fixed splitter aggregating on-the-fly on the input exchange, where as it should have used a defensive copy, to avoid any side effects during splitting, such as an exception being set to be propagated back to the input message when splitting is done.", "camel-41e4b5b9": "Fixed scala content based router not evaluating as predicate.", "camel-b56d2962": "Use a copy of the incoming exchange for aggregation without sharing UoW. This ensures that on compleiton on the completed exchange always will be executed. This ensures the aggregation repository will always be confirmed, and the internal in progress map will have the completed exchange removed as well, preventing it from eating memory over time.", "camel-050c542e": "More eager method name check when using bean in Camel routes. Now also bean instances is checked.", "camel-02626724": "Fixed issue with file consumer using absolute starting directory.", "camel-2a3f3392": "Fixed endpoints not being registers in services to close as endpoints is enlisted in its own list. This prevents 2x shutdown of endpoints when Camel shutdown.", "camel-4c37e773": "InterceptFrom now works if using endpoint instances and not just uris", "camel-ff2713d1": "Fixed recipient list in parallel mode creating a new thread pool for aggregator background task.", "camel-c1b2f2f8": "Fixed mocking existing endpoints, stripping off parameters.", "camel-5225e6e3": "Fixed thrad pools naming not being quoted when registered in JMX.", "camel-9319e139": "Fixed marker file strategy not being thread safe. Thanks to Maria Iracheta for the patch.", "camel-52106681": "Fix some issues of ErrorHandler useOriginalMessage option", "camel-de9399f3": "Adding new type converter should remove it from misses cache.", "camel-b9094cb5": "Stopping a route doesnt stop error handlers as they could potentialy be shared by other routes.", "camel-cbffff59": "updated ObjectConverter.toX() methods to check for Double.NaN and return NULL instead of 0", "camel-4efddb3f": "endpoint uris now support multiple values for the same key.", "camel-96e40c3c": "Fixed issue with ExchangeSentEvent being emitted to soon when using async routing engine.", "camel-7345fefc": "Fixed issue with file consumer preserving existing headers when binding to exchange, so for example move done option can use custom headers.", "camel-f39bc60d": "Fixed log eip to ensure async callback is invoked. Thanks to Sergey for the patch.", "camel-79168a23": "LifecycleStrategy should be started/stopped when CamelContext is starting/stopping", "camel-06a8489a": "Fixed issue with file consumer not auto creating start dir if having dot in name. Thanks to Taariq for the patch.", "camel-e38494f1": "Fixed issue when exception thrown from using custom expression with Splitter EIP, not being triggered by onException.", "camel-f98ac676": "Fixed issue with routing slip EIP not propagating failed to resolve endpoint exception properly.", "camel-8e3450f4": "Marshal/unmarshal should clear OUT message in case of exception thrown.", "camel-9e05f77f": "Fixed simple ognl on exception function.", "camel-df9f4a6a": "Fixed issue with registering processors when using policy in a Camel route.", "camel-c408c3ed": "Fix the issue of using VM and splitter bean", "camel-1e54865c": "Improve restarting CamelContext to ensure lifecycle strategies is not lost.", "camel-afa1d132": "Fixed timer component suspend/resume issue.", "camel-8898d491": "bean component - @Handler should take precedence in a bean that implements Predicate", "camel-a8586a69": "Simple language - OGNL - Invoking explicit method with no parameters should not cause ambiguous exception for overloaded methods", "camel-8cadc344": "Improved Camel JMX working with WebSphere. Thanks to Christian Ohr for the patch.", "camel-033eb6fe": "Fixed file producer to use charset when writing files if given.", "camel-2db5570f": "Do not delete done file if noop=true", "camel-55c2e2d8": "Fixed seda endpoints shutdown and restart due advice with not picking up refreshed seda queue to use between producers and consumers.", "camel-4cf7e80e": "Fixed uri normalization to support % sign itself to be encoded as %25. Added explict % decimal encoding to normalization logic.", "camel-93935780": "SedaProducer should send to the right BlockingQueue being attached on the SedaEndpoint so that the sent messages don't get lost.", "camel-da05f5aa": "Fixed using sendEmptyMessageWhenIdle=true on a batch consumer such as File now working with Aggregate EIP when using completionFromBatchConsumer", "camel-b3bb8670": "Fixed threads EIP in recent commit.", "camel-a57830ed": "Fixed issue with onException and using -1 for maximumRedelivieries may cause side effect on other onException. Thanks to \u00d8yvind Ingebrigtsen \u00d8vergaard for the patch.", "camel-0e87b84f": "Camel proxy should not forward methods from java.lang.Object", "camel-15d0fd9b": "Bean component - Should use try conversion when choosing method based on parameter type matching.", "camel-78c73502": "Fixed recipientlist/multicast so depending on unexpected or exception during routing sets the redelivery exhaust property correctly. And that the doTry .. doCatch will reset the exhaust property to esnure exception is handled like the error handler would do in RedeliveryErrorHandler.", "camel-0c3c7d1b": "ProducerCache/ConsumerCache should use regular LRUCache to ensure prouducer/consumer is always stopped when evicted/stopping cache itself. As a soft cache may GC the entries without stopping any may cause internal resources running, which should have been stopped otherwise.", "camel-6d63a502": "Fixed NPE if all options disable on log formatter.", "camel-708e756d": "Fixed the Split inside Split - Parallel processing issue", "camel-3f70d612": "NotifyBuilder is now thread safe.", "camel-4a05eccf": "Fixed aggregate eip to dynamic completion size always override fixed size.", "camel-de6dd425": "Fixed the resolvement of the property placeholder in combination with the transacted DSL. Thanks to Claus Ibsen for providing a better patch as well as the unit-test for the camel-core module. I also added two tests for the camel-spring module using the propertyPlaceholder and bridgePropertyPlaceholder variants, also polished a tiny generics stuff of the ProcessorDefinition.resolvePropertyPlaceholders() method.", "camel-a04674f2": "Fixed issue with XML streaming tokenizer dealing with inheriting namespaces from parent tag. Thanks to Rich Newcomb for the patch.", "camel-e775071b": "Revert \"CAMEL-5844: Camel Tracer not showing some EIP names\"", "camel-020c451a": "Fixed CBR not working correctly when being nested. Also fixed endChoice to work better when nested.", "camel-2c5a42db": "Fixed AbstractListAggregationStrategy to work with completion from batch consumer.", "camel-7f8a295a": "Dump predicate/expression built from java dsl with builders to use toString when being dumped in route model xml.", "camel-4209fabb": "Fixed recipient list EIP to work with stream caching properly.", "camel-55751402": "Fixed routing slip and dynamic router EIP to work with stream caching properly.", "camel-2d7051ed": "fixed the issue that Tokenize XML does not support child elements with names similar to their parent", "camel-ed7e7c9f": "fix the IndexOutOfBoundsException when customized id of wireTap component", "camel-1fc7bd7a": "Loop EIP doesn't honour copy option in some circumstances; also add 'append' option to MyAsyncComponent for testing, such that it retains the input body for assertion purposes", "camel-617eab1c": "Bean using OGNL should accept null as valid response from OGNL invocation.", "camel-b92d6237": "Fixed Message history - Possible ArrayIndexOutOfBoundsException", "camel-745a85ab": "Bean parameter binding with boolean types should eval as predicates.", "camel-f412d744": "StaxConverter: encoding problems for XMLEventReader and XMLStreamReader. Thanks to Franz Forsthofer for the patch.", "camel-6b210169": "Fixed bean binding using parameter syntax style to eager check for compatible types, which avoids further type conversions which could cause problems with InputStreams.", "camel-cd40b712": "CBR - Should break out if exception was thrown when evaluating predicate", "camel-5761250c": "Fix for https://issues.apache.org/jira/browse/CAMEL-6918 - Error handler for SEDA producer doesn't work - added exception handling in the SendProducer + tests", "camel-4954d573": "Fixed file/ftp consumer when idempotent=true may not detect file changed as new file, due the file was regarded as still in-progress.", "camel-f744afd9": "Releasing a non-singleton producer by ProducerCache should not only stop the producer but also shutdown it as well if it is a ShutdownableService.", "camel-6b2ffb30": "Fixed file consumer on rollback to delete the done file if moveFailed is in use. Thanks to Christoph Giera for patch.", "camel-37e0e6bb": "Fixed browse as xml not returning files if includeBody=true.", "camel-4ed448c7": "Fixed updateRouteFromXML on route mbean to handle if the xml does not contain the route id, or does not match.", "camel-3244c1e5": "Using custom beans with @ManagedResource shows unavailable standard attributes", "camel-15e1077d": "Fixed stream caching to clean temp file when UoW done. Thanks to Franz Forsthofer for the patch.", "camel-00a9b02b": "Fixed the Scaner close issue in JDK7", "camel-6641f182": "Fixed the issue that tokenizeXml fails when attributes have a slash in them", "camel-7c9326f4": " Set XsltBuilder allowStax attribute to be true by default", "camel-cc192f87": "XsltBuilder uses the StaxSource by default", "camel-b6981cfd": "Fixed aggregator when completion size is 1, eg when completed asap. Should not call remove as we did not add.", "camel-095fa2b4": "Fixed throttler with dynamic header changing rate not as expected. Thanks to Michael Pisula for the patch.", "camel-5f726d0b": "BacklogDebugger - Should not change body/header type to string", "camel-1e33fcbc": "onCompletion should be called on agg strategy on splitter/multicast etc, just like it does in aggregte eip.", "camel-5f78c646": "Fixed the unit test failure of XmlConverterTest", "camel-336663c9": "NIOConverter need to call flip() when we put something into the buffer", "camel-ae419224": "Address the SchemaFactory thread safe issue.", "camel-18c23fa8": "Fixed the ByteBuffer to String conversion issue", "camel-a5a2f750": "GroupExchange in agg strategy should create a new exchange instread of copy, as then exceptions would be propagated which it shouldnt. Thanks to Luke Hamaty for unit test reproducing the issue.", "camel-44cad623": "Fixed doTry .. doCatch using recipient list/multicast etc. not working as expected to let the doCatch handle the errors.", "camel-fa165d6b": "Fixed interceptSendToEndpoint to match uris as it needed to be normalized.", "camel-91228815": "Some endpoints configured using beans may result in NPE under DEBUG mode", "camel-9cb09d14": "fixed the same issue with headerAs", "camel-e6fbbf04": "Throwing exception when bodyAs(type) has some addition text", "camel-7bbb88ba": "Rest DSL allows to configure properties for rest configuration.", "camel-cabee0e9": "Fixed JndiRegistry findByType to do correct type check.", "camel-43956f93": "Camel Properties Component concatenation issue", "camel-35bde2b2": "updated Throttler to use previous maximumRequestsPerPeriod value if missing", "camel-02da984a": "Make propertyPrefix/Suffix placeholder-aware", "camel-57ba1bde": "Fixed using RAW(xxx) in uris when xxx was ending with ). Thanks to Matthew Gill for the patch.", "camel-69b00a31": "Applying: CAMEL-7478 Fixed the simple language OGNL expression issue of length", "camel-85ced066": "Fixed POJO aggregating when the parameter type was referring to a type that was class annotated.", "camel-689147e9": "Fixed advice with when using CBR may add twice to when clauses in the CBR.", "camel-b3377b16": "OnComplete did not work with rollback", "camel-1f92fa42": "Removed duplicate getter on camelcontext mbean for message history.", "camel-e30f1c53": "Merge branch 'CAMEL-7611' of https://github.com/nkukhar/camel", "camel-faa20255": "Fixed bug with adviceWith after last code change in this area.", "camel-7ad36e3d": "Fixed issue with exchange may get stuck as inflight if creating producer fails when its used in dynamic eips such as routing slip etc.", "camel-eab06182": "Mock - Defining assertion on message doest work if using convertTo", "camel-19b2aa31": "Fixed the regression of MDCResetTest", "camel-d57f402b": "fix for CAMEL-7883", "camel-799b45df": "Fixed the issue that CircuitBreakerLoadBalancer fails on async processors with thanks to Matteo", "camel-d581c4a4": "IdempotentConsumer - If no messageId should allow Camel error handler to react", "camel-cac72b14": "Fixed the issue of Memory leak when adding/removing a lot of routes", "camel-2e985f9b": " Multicast Aggregator should keep processing other exchange which is not timeout", "camel-39ccf5d6": "XML parsing error is ignored by xtoknize XML tokenizer", "camel-36e7b668": "Avoid potential NPE when using @PropertyInject with Camel main.", "camel-53b4e90c": "Bean component should detect override methods that are assignable by type, so duplicate methods is not reported as error.", "camel-17475d80": "scheduled poll consumers may leak threads when restarting routes.", "camel-54d7fc59": "Using exchangePattern=xxx should override pattern in send/recipient list when sending to the destination.", "camel-dd0f74c0": "Ensure circuit stays open during halfOpenAfter period", "camel-57f72cd9": "Fixed the NPE in AbstractListAggregationStrategy if empty list", "camel-597883fa": "Bean component - Potential NPE in BeanInfo", "camel-d063f471": "Fixed leaking exchangesInFlightKeys in ManagedRoute if exchange failed.", "camel-7b1253db": "File componet readlock state should be per file so its possible to use pollEnrich to poll in a 2nd file and keep those state separated. Thanks to Andy Fedotov for unit test.", "camel-ea8ee025": "CamelContext API for routeStatus is wrong for suspended routes.", "camel-108d94f7": "Bean component - Should filter out abstract methods", "camel-9da2c05a": "RedeliveryPattern should support property placeholders.", "camel-08077733": "Fixed JMX leak when using ServicePoolAware producers. Thanks to Bob Browning for the test case.", "camel-e7ac45b6": "Relax uri validation check so & with ? is allowed", "camel-169b981e": "Fixed potential NPE in file rename when using move/moveFailed.", "camel-1957a828": "Invocation of Bean fails when Bean extends and abstract which implements the actual method. Thanks to Alex Paransky for unit test.", "camel-62b2042b": "NotifyBuilder.fromRoute() does not work for some endpoint types", "camel-1cab39f6": "Using working dir as default parent file for fileStore file when fileStore file has no parent file given.", "camel-baece126": "Fix using shareUnitOfWork with multicast and using onException with unhandled=false.", "camel-0ead2cac": "IdempotentConsumer - If exception from repo it should be able to handle by onException", "camel-9a6e6d8a": "Simple backwards parser bug if using file as prefix", "camel-da035952": "Propagate 'fault' property to soft copy", "camel-84922699": "ClassCastException with interceptFrom and using when with JMX. Thanks to Stephan Siano for the patch.", "camel-7944093f": "doTry .. doFinally should run the finally block for fault messages also", "camel-4d03e9de": "seda - discardIfNoConsumers=true do not call on completions", "log4j2-0c20bfd8": "org.apache.logging.log4j.core.config.plugins.util.ResolverUtil.extractPath(URL) incorrectly converts '+' characters to spaces.", "log4j2-c79a743b": "- A NullPointerException would occur if no format value was passed to the SyslogAppender.", "log4j2-a96b455c": "Custom java.util.logging.Level gives null Log4j Level and causes NPE.", "log4j2-7f391872": "- The Facility value was being improperly calculated.", "log4j2-11960820": "Circular Exception cause throws StackOverflowError.", "log4j2-3b12e13d": "- Convert LogManager binding to use regular java properties instead of XML properties to workaround a bug in Oracle's xmlparserv2 jar", "log4j2-c8fd3c53": "Log4jMarker#contains(String) does not respect org.slf4j.Marker contract.", "log4j2-86d8944f": "Log4jMarker#remove(Marker) does not respect org.slf4j.Marker contract.", "log4j2-4cf831b6": "Log4jMarker#add(Marker) does not respect org.slf4j.Marker contract.", "log4j2-4786a739": "ThrowableProxy getExtendedStackTraceAsString throws NPE on deserialized nested exceptions.", "log4j2-e7bbeceb": "Exceptions not logged when using TcpSocketServer + SerializedLayout.", "log4j2-e9b628ec": "Improper handling of JSON escape chars when deserializing JSON log events.", "log4j2-88641f49": "PatternParser was not properly handling adjacent nested options", "log4j2-3f41ff48": "Add Charset serialization logic to address LOG4J2-1099.", "log4j2-fc3e9d2d": "StructuredDataFilter annotated KeyValuePairs with PluginAttr instead of PluginElement", "log4j2-afcf92eb": "Fix LOG4J2-114 - StructuredDataMessage was validating the length of the value instead of the key", "log4j2-8acedb4e": "Fixed NullPointerException when only root logger is defined (and no named loggers) in configuration properties file.", "log4j2-9f924f10": "Fixed NullPointerException when only root logger is defined (and no named loggers) in configuration properties file.", "log4j2-424068f7": "Fix LOG4J2-1251 JUL bridge issue.", "log4j2-029e79da": "<action issue=\"LOG4J2-127\" dev=\"rgoers\" type=\"fix\">AbstractLogger methods were not passing Markers to the isEnabled methods.</action> Fixed error(Marker, Message) and fatal(Marker, Message).", "log4j2-c6318b63": "- JndiLookup mindlessly casts to String and should use String.valueOf().", "log4j2-1d12bf0e": "XMLLayout indents, but not the first child tag (Event).", "log4j2-ffedf33f": "XMLLayout indents, but not the first child tag (Event).", "log4j2-50e19247": "- Fix NullPointerException when no protocol is specified. Regression introduced by fix for LOG4J2-228", "log4j2-7792679c": "- Fix regression in properties configuration to support arbitrary component ids", "log4j2-a523dcd5": "Fixed bug in ReusableParameterizedMessage where Throwable was never updated so first error was logged over and over again and subsequent errors were not logged.", "log4j2-1461f1f6": "- MessagePatternConverter now returns null if the log message is null.", "log4j2-17296089": "- ThreadContextMapFilter was matching on the key instead of the value of the key.", "log4j2-f91ce934": "LOG4J2-181 - Fix NPE in DatagramSocketManager and write header whenever the OutputStream is set in OutputStreamManager.", "log4j2-aeb6fc9d": "- MapMessage key value was not enclosed in quotes when generating XML", "log4j2-ed951c76": "don't ignore configured named loggers if root logger is not configured and a default root logger is installed. Improved docs.", "log4j2-2d7d6311": "- RegexFilter threw a NullPointerException when used as a context-wide filter.", "log4j2-7b38965d": "HTML layout does not output meta element for charset.", "log4j2-09175c8b": "HTML layout does not specify charset in content type.", "log4j2-9d817953": "XML layout does not specify charset in content type.", "log4j2-8faf7f77": "- Add guid to FlumeEvent headers for non-Map Messages", "log4j2-25cb587a": "Changed the ConfigurationFactory to recognize and properly use the classpath: URI scheme in addition to the classloader: URI scheme. Thanks to Abhinav Shah for the patch this change was based on.", "log4j2-ca59ece6": "- Reset the Configuration if the ClassLoaderContextSelector creates a LoggerContext without a configuration location and then is later provided one.", "log4j2-300bc575": "Added toString methods to ThreadContextStack/Map implementation classes", "log4j2-3f1e0fdc": "fixed issue where SMTPAppender does not send mails with error or fatal level without prior info event", "log4j2-8dead3bb": "Fixed LOG4J2-344: Changed the Servlet 3.0 auto-initializer to add the filter by class to get around a WebLogic bug.", "log4j2-1df1db27": "Changed the Servlet 3.0 auto-initializer so that it does nothing in a Servlet 2.5 or older application. This ensures behavioral consistency across containers. Thanks to Abhinav Shah for the patch this change was based on.", "log4j2-296ea4a5": "Additional fixes for LOG4J2-359 to abort initialization if a duplicate filter already exists and to check the actual Servlet EFFECTIVE version.", "log4j2-a8a24357": "- Add PatternLayout constructor to Log4j 1.2 bridge for Velocity", "log4j2-ef8517e4": "- Add DateLookup and ThreadContextLookup to default lookups.", "log4j2-7c2ce5cf": "Fixed issues with time-based file rollover (monthly, weekly, hourly and every minute)", "log4j2-731c84b5": "bugfix: similar to stopping loggers in AbstractConfig.stop(), avoid starting the same AsyncLoggerConfig twice: this will mess up the ref count in AsyncLoggerConfigHelper", "log4j2-a19ecc9e": "- Allow classpath scheme when specifying configuration file location as a system property.", "log4j2-2c966ad9": "- Configure properties and setup Interpolator before processing rest of configuration.", "log4j2-8f0c4871": "- SLf4JLogger is now Serializable.", "log4j2-238ce8aa": "- Use the formatted Message in RFC5424Layout for non-StructuredDataMessages", "log4j2-0343e9c7": "XMLLayout does not include marker name. Apply patch with changes, and also adjust layout documentation to fix element name casing.", "log4j2-484c865f": "- Support arrays in sub-elements", "log4j2-7b9e48e8": "fix for config files with a '+' character in their path", "log4j2-50340d0c": "- hostName property was not being set until after the first configuration element.", "log4j2-11763dee": "The message and ndc fields are not JavaScript escaped in JSONLayout.", "log4j2-24a3bed4": "additional fix to handle line feed and carriage return characters in ObjectName value", "log4j2-61ccbb95": "escape contextName when unregistering LoggerContext, quote escaped newlines, drop \\r characters", "log4j2-a759d8ae": "Fixed MalformedObjectNameException if context name contains '=' character.", "log4j2-837dcd89": "LocalizedMessage serialization is broken.", "log4j2-3eb44094": "Fix LOG4J2-56", "log4j2-bb02fa15": "LOG4J2-675 RollingRandomAccessFile now writes the layout header after rollover; RollingFile and RollingRandomAccessFile now write the layout footer before rollover.", "log4j2-3b4b370e": "- correct bad fix", "log4j2-a5a1f1a2": "prevent NPE if AsyncLogger/AsyncLoggerConfig is used after log4j was shut down", "log4j2-60f64cc1": "Correctly process log events when combining AsyncLoggers with AsyncAppender", "log4j2-3b2e880e": "Don't close NoSQL clients on commit.", "log4j2-2afe3dff": "Fix for LOG4J2-71", "log4j2-4b77622b": "XInclude not working with relative path.", "log4j2-97203de8": "Improved FormattedMessage, StringFormattedMessage, LocalizedMessage, MessageFormatMessage and ObjectMessage for asynchronous logging to ensure the formatted message does not change even if parameters are modified by the application. Improved docs for MapMessage and StructuredDataMessage. Improved site docs.", "log4j2-b2ec5106": "change ObjectMessage.equals() to account for the fact that the parameter may have been converted to a String during serialization", "log4j2-73400bfb": "Add custom SLF4J marker support in log4j-slf4j-impl bridge.", "log4j2-7bb1ad47": "SimpleLogger throws ArrayIndexOutOfBoundsException for an empty array. Introduce a new Rule to write with cleaner and more independent tests.", "log4j2-0bea17d7": "MarkerManager Log4jMarker.hasParents() returns opposite of correct result.", "log4j2-411dad65": "ThrowableProxy fails if a class in logged stack trace throws java.lang.Error from initializer. Finally got a test failing/passing.", "log4j2-d3989b40": "ThrowableProxy throws NoClassDefFoundError.", "log4j2-f9b0bbee": "JUL adapter does not map Log4j'2 FATAL level to JUL level.", "log4j2-f8a42197": "ThrowableProxy.getExtendedStackTraceAsString causes NullpointerException.", "log4j2-d8af1c93": "Fix LOG4J2-94 - Interpolator was not stripping Lookup key separator when trying to locate the default value for a variable.", "log4j2-16ad8763": "StringFormattedMessage serialization is incorrect.", "log4j2-43517f15": "System.out no longer works after the Console appender and JANSI is initialized.", "log4j2-3cee912e": "Async root logger config should default includeLocation to false", "math-91d280b7": "Array of length 1 must be handled as a special case.", "math-a4ffd393": "Singular matrices were considered non-singular due to strict comparison with zero. Reported and fixed by Sean Owen.", "math-c979a6f0": "Loop added to ensure that the largest norm is used in the singularity check. Patch provided by Sean Owen.", "math-bda25b40": "Fix EigenDecomposition for certain non-symmetric matrices.", "math-4ebd967c": "Precision improvements by using \"expm1\" and \"log1p\". Thanks to Sean Owen.", "math-996c0c16": "Fix EnumeratedRealDistribution.inverseCumulativeProbability. Thanks to matteodg and Phil.", "math-aff82362": "Avoid infinite recursion. Thanks to Florian Erhard.", "math-b12610d3": "Avoid overflow in Kendalls correlation for large input arrays.", "math-8e5867ed": "Fix Precision.round(float, int, int) for RoundingMode ROUND_UP. Thanks to  Oleksandr Muliarevych.", "math-b285f170": "LinearConstraintSet returns now the LinearConstraints in the same order as they have been added.", "math-63d88c74": "Ensure that bad usage will raise an exception.", "math-e91d0f05": "Precision.round(double, ...) will return negative zero for negative values rounded to zero.", "math-7cfbc0da": "Fixed error when splitting an arc close to its end.", "math-19c1c3bb": "Fixed sphere generation in degenerated cases.", "math-faf99727": "Partly fixed MATH-1096.", "math-a6f96306": "Fix checker seeing not old point", "math-e2dc384d": "Fix switched iterations and evaluations", "math-2a6c6409": "Build empty polyhedrons set when given equal min/max boundaries.", "math-f4c926ea": "Build properly empty polygons for equal min/max box.", "math-5a6ccd58": "Use base class iteration counter. Reported by Ajo Fod.", "math-a197ba85": "Fixed NullPointerException in BSPTree.", "math-ba62c59d": "Fixed overflow in Precision.equals with ulps.", "math-d4f978dd": "Fix wrong sorting in the presence of NaN.", "math-a7363a2a": "Fix MonotoneChain algorithm in case of collinear hull points. Thanks to Guillaume Marceau.", "math-cc4ab51e": "Fixed BinomialDistribution to deal with degenerate cases correctly.", "math-2f2a2dda": "Allow same value for lower and upper bounds.", "math-4080feff": "Fix MonotoneChain with collinear points as input: take tolerance factor into account when initially sorting the input points. Thanks to Guillaume Marceau for the report.", "math-596ccd59": "Fix FuzzyKMeansClusterer when data points equal a cluster center. Thanks to Pashutan Modaresi", "math-4aa4c6d3": "Made getKernel return a constant distribution for zero variance bins.  JIRA: MATH-1203.", "math-b148046a": "Made getKernel return a constant distribution for zero variance bins.  JIRA: MATH-1203.", "math-a56d4998": "bracket function gives up too early", "math-ce2badf0": "Corrected the fix for MATH-1208.", "math-a06a1584": "Fixed wrong intersection selection in polyhedrons sets.", "math-c44bfe00": "Fixed wrong event detection in case of close events pairs.", "math-96eb80ef": "Throw a DimensionMismatchException if dimension of constraints and objective function does not match in SimplexSolver.", "math-8f35fcb8": "Fixed error message for unknown parameter name in ODE.", "math-471e6b07": "Propagate input value to Gamma#digamma and Gamma#trigamma if the input is not a real value to avoid infinite recursion. Thanks to Aleksei Dievskii.", "math-09fe956a": "Changed data size check to be positive length, not > 1 to fix ResizableDoubleArray constructor failure on input array of length 1.", "math-41f29780": "", "math-03178c8b": "", "math-4c4b3e2e": "", "math-a94ff90a": "fixed FastMath.exp returning NaN for non-NaN arguments", "math-26e878ab": "Fixed infinite loop in FastMath.pow(double, long) with Long.MIN_VALUE.", "math-fb007815": "Fixed incorrect Kendall's tau coefficient calculation due to internal integer overflow. Thanks to Marc Rosen.", "math-9e0c5ad4": "Fixed Gamma#gamma function for values smaller than -20. Thanks to Jean Noel Delavalade", "math-56434517": "Detect start failures with multi-step ODE integrators.", "math-1d635088": "", "math-dbdff075": "fixed an error leading the simplex solver to compute the right solution but return another one JIRA: MATH-286", "math-38983e82": "fixed an error induced by zero entries in simplex solver JIRA: MATH-288", "math-b01fcc31": "fixed an error with negative constraints and unfeasible solution JIRA: MATH-290", "math-59a0da9c": "Fixed a OutOfBoundException in simplex solver when some constraints are tight JIRA: MATH-293", "math-2c8a114f": "Implemented alternative algorithm for generating poisson deviates when the mean is large. JIRA: MATH-294.", "math-ef9b639a": "Fixed an overflow error in MathUtils.distance that was causing KMeansPlusPlusClusterer to fail with a NullPointerException when component distances between points exceeded Integer.MAXVALUE. JIRA: MATH-305 Reported by Erik van Ingen", "math-0596e314": "Fixed parameter test in RandomDataImpl#nextExponential. JIRA: MATH-309.", "math-83f18d52": "Fixed an index computation error in eigen decomposition. Once again, kudos to Dimitri for debugging this. JIRA: MATH-318", "math-b2f3f6db": "Singular Value Decomposition now computes either the compact SVD (using only positive singular values) or truncated SVD (using a user-specified maximal number of singular values). Fixed Singular Value Decomposition solving of singular systems. JIRA: MATH-320, MATH-321", "math-c06cc933": "changed SVD to compute either compact SVD (using only positive singular values) or truncated SVD (using only singular values up to a user-specified max number) started fix of SVD solver that did not compute a least square solution the fix is not complete yet as it seems the solution does not really gives the smallest possible residuals. See for example the commented out parts of testMath320A in SingularValueSolverTest. JIRA: MATH-320", "math-ce185345": "fixed a wrong implementation of the Linf vector norm JIRA: MATH-326", "math-262fe4c0": "Rewritten SVD implementation based on JAMA code.", "math-6dd3724b": "Fixed regression in Frequency.getPct(Object) introduced in 2.0. Cumulative percent was being returned for Object arguments in place of percent.", "math-8dd22390": "Fixed automatic step initialization in embedded Runge-Kutta integrators. The relative tolerance setting was never used, only the absolute tolerance was used. JIRA: MATH-338", "math-f6dd42b4": "Fixed a missing bracketing check of initial interval in Brent solver JIRA: MATH-343", "math-a0b4b4b7": "Fixed wrong return values when enpoints are roots in Brent solver with a user provided initial guess JIRA: MATH-344", "math-4cc9a49d": "Removed deprecated methods.", "math-061f5017": "Fixed an error in events handling in ODE solvers. In some rare cases, events occurring close to a step start were handled without truncating the step, making them appear as is they occurred close to the step end JIRA: MATH-358", "math-3a15d8ce": "Fix a problem with the default sparseIterator when an array has exactly one non-zero element Submitted by: Albert Huang (with some style tweeks) Issue: MATH-367", "math-f4a4464b": "Fix NullPointerException in BisectionSolver.solve(f, min, max, initial) JIRA: MATH-369", "math-495f04bc": "Removed deprecated methods.", "math-bb005b56": "Fixed loss of significance error in PersonsCorrelation p-value computation causing p-values smaller than the machine epsilon (~1E-16) to be reported as 0. JIRA: MATH-371 Reported and patched by Kevin Childs", "math-bfe4623c": "Change the default value for those UnivariateStatistics that have a conventional value on the empty set. JIRA: MATH-373", "math-c640932d": "fixed", "math-d4b02f6a": "Fixed inconsistent definition of \"getResult\". Modified associated test accordingly.", "math-962315ba": "Another bug uncovered; all things being equal, the code now behaves like the Puthon implementation. MATH-397: Modified \"BrentOptimizer\" following the changes in \"AbstractUnivariateRealOptimizer\".", "math-784e4f69": "corrected", "math-51aa6e6c": "(point 13) Selecting a random start value (instead of interval bounds).", "math-5fe9b36c": "Modified NormalDistributionImpl.cumulativeProbability to return 0 or 1, respectively for values more than 40 standard deviations from the mean. For these values, the actual probability is indistinguishable from 0 or 1 as a double.  Top coding improves performance for extreme values and prevents convergence exceptions.", "math-133cbc2d": "Fixed two errors in simplex solver when entries are close together or when variables are not restricted to non-negative.", "math-a4b1948b": "MathUtils.equals(double, double) does not work properly for floats - add equivalent (float, float) methods and basic tests", "math-6d6649ef": "FastMath.max(50.0f, -50.0f) => -50.0f; should be +50.0f", "math-26a61077": "Workaround exception generated when the optimizer tries invalid values for the \"sigma\" parameter. Added a method to allow the user to pass his own initial guess.", "math-b6bf8f41": "Wrong  variable type (\"int\" instead of \"double\").", "math-fbbb96eb": "Reduced cancellation errors in Vector3D.crossProduct", "math-328513f3": "Changed MathUtils.round(double,int,int) to propagate rather than wrap runtime exceptions.  Instead of MathRuntimeException, this method now throws IllegalArgumentException or ArithmeticException under the conditions specified in the javadoc. JIRA: MATH-555", "math-fc409e88": "Removed \"assert\" statements.", "math-2123f780": "Fixed add method to match javadoc contract when one or both addends has NaN parts.", "math-334c01e6": "Work around infinite loop.", "math-c0b49542": "Early detection of \"Regula Falsi\" algorithm being stuck due to finite precision. Javadoc makes it clear that either the Pegasus or the Illinois solver should be preferred over the Regula Falsi one (due to D. Hendriks).", "math-ebc61de9": "Reverted to original behaviour.", "math-8b418000": "Fixed a wrong detection of rotation axis versus vectors plane in Rotation constructor using two vectors pairs.", "math-98556fed": "Fixed bugs in AbstractRandomGenerator nextInt() and nextLong() default implementations.  Prior to the fix for this issue, these methods generated only positive values.", "math-32b0f733": "Complex division by zero:  z / 0 = INF if z is not ZERO  0 / 0 = NaN", "math-97b440fc": "Reverting to previous behaviour, as requested by P. Steitz.", "math-5e638976": "Fixed an integer overflow in OpenMapRealMatrix.", "math-118f0cc0": "Fixed errors in SummaryStatistics causing overriden statistics not to be updated if the supplied impls are commons-math classes.  JIRA: MATH-691.", "math-7980a242": "Fixed an event resetting issue in ODE.", "math-b2e24119": "New implementation of AbstractRealDistribution.inverseCumulativeProbability(double). Solves MATH-699, and leads to slightly smaller execution times.", "math-3f645310": "Fixed array indexing error in Variance evaluate method for computing the weighted variance of an array segment.", "math-645d642b": "Improved Dormand-Prince 8(5,3) step interpolator accuracy at step start.", "math-f656676e": "Fixed case of unconstrained variables that still occur in the objective function in simplex solver.", "math-faa77857": "Fixed bracketing interval balancing in BracketingNthOrderBrentSolver.", "math-3a08bfa6": "Use modified Lentz-Thompson algorithm for continued fraction evaluation.", "math-95d15eff": "Introduced tests to guard against overflow (MATH-722). Corrected Javadoc and updated unit tests accordingly.", "math-1352a70f": "Made ISAACRandom clear its normal deviate cache on reseed. JIRA: MATH-723.", "math-9c8bb934": "Fixed rounding error in RandomDataImpl nextInt, nextLong methods causing lower endpoints to be excluded when negative. Also improved robustness of nextUniform for extreme values and changed its contract to throw IAE when provided bounds are infinite or NaN.", "math-69273dca": "fixed too long first step in fixed Runge-Kutta integrators.", "math-d2777388": "Check first step size in embedded Runge-Kutta integrators.", "math-f64b6a90": "New implementation of Beta.logBeta(double, double), based on the NSWC library of mathematical functions.   - increased accuracy   - deprecation of Beta.logBeta(double, double, double, int) as the new     implementation is no longer iterative.   - some private methods are tested through reflection.", "math-8a83581e": "Fixed \"doubleValue()\" and \"floatValue()\" when numerator and denominator are larger than the range of the corresponding primitive type.", "math-76b7413d": "Removed broken and deprecated synchronization support in ResizableDoubleArray.", "math-b9ca51f0": "Use same range check in ctor as in setter for ElitisticListPopulation. Thanks to Reid Hochstedler", "math-5b9302d5": "Allow unlimited input values for Dfp#multiply.", "math-ebadb558": "Fixed iterator() method in ListPopulation to return an iterator of the unmodifiable list, thanks to Reid Hochstedler.", "math-dd6cefb0": "Fixed a wrong assumption on BSP tree attributes.", "math-3c4cb189": "use epsilon criteria when deciding to drop columns after phase 1.", "math-621bbb8f": "Fixed an error in rectangular Cholesky decomposition.", "math-118e94b5": "Fixed a problem when building rotations from two pairs of vectors. In very rare cases, due to numerical inaccuracies the computed quaternion was not normalized (some examples went as high as 1.0e8) and even after normalization, the quaternion was plain wrong.", "math-607c9ec6": "fixed a bug in RealVector.outerProduct(RealVector). Now loops through *all* entries of the vectors.", "math-6eb46555": "fixed a bug in RealVector.dotProduct(RealVector). Now loops through *all* entries of the vectors.", "math-a49e443c": "Add additional heuristic for rare cases in pivotRow selection.", "math-63a48705": "Avoid overflow.", "math-d7c0f27e": "Improve overflow check for negative values in Fraction constructor.", "math-7994d3ee": "Generate an exception when the parameter guessing procedure cannot perform correctly (in rare ill-conditioned cases).", "math-ad252a8c": "Fixed Schur transformation for certain input matrices, changed index parameter names to indicate their purpose.", "math-350f726c": "The best point is sometimes not the last one evaluated.", "math-ac597cc1": "(second take). Best point must be returned.", "math-66dece12": "Clarified definition of isSupportXxxBoundInclusive in RealDistribution interface, made code consistent with the definition, and deprecated these methods, marking for removal in 4.0. JIRA: MATH-859", "math-abe53a53": "Fixed missing \"repair\" of a point that lies outside the boundaries. Thanks to Frank Hessen for the report and for pinpointing the cause of the problem.", "math-b55e0206": "Early detection that overflow will occur in the variables normalization procedure (\"encode\" method). Warning mentioned in the documentation.", "math-bfbb156d": "Previous commit was missing a crucial modification (in the \"repair\" method), an inconsistency which entailed the failing of some tests. With that modification (thanks to Nikolaus Hansen), it was established that the \"encode\" and \"decode\" steps were indeed useless. This commit thus removes them, and all the code that was necessary only because of those two methods. Finite and infinite can now be freely mixed. Unit tests that depended on those limitations were also removed (thus also the one that was added following MATH-865).", "math-2a9cbbab": "Finalized fix for MATH-880.", "math-2b852d79": "SpearmansCorrelation now works correctly when provided with a NaturalRanking with NaNStrategy.REMOVED.", "math-ce126bdb": "Fixed copy/paste bug.", "math-6844aba9": "Fixed wrong assumption in \"pow\" method.", "math-2836a6f9": "Avoid memory exhaustion for large number of unclorrelated observations.", "math-b07ecae3": "Using a diagonal matrix to avoid exhausting memory.", "math-185e3033": "Made \"BitsStreamGenerator\" class \"Serializable\" to allow cloning of subclasses. Added cloning test for all \"RealDistribution\" classes. Thanks to Dennis Hendriks.", "math-cedf0d27": "Fixed truncated value. Thanks to Piotr Wydrych. Added unit test: comparing density values with univariate normal distribution.", "math-724795b5": "Fixed Complex.reciprocal() for zero argument.", "math-48dde378": "Fixed DerivativeStructure.atan2 for special cases when both arguments are +/-0.", "math-73605560": "Fixed accuracy of 3D Line.revert().", "math-49444ee6": "Allow covariance to be computed for one-dimensional variables.", "math-0d057fc6": "Fixed creation of generic array.", "math-f83bbc1d": "Increment iteration counter. By default, the maximum number of iterations is \"Integer.MAX_VALUE\".", "math-424cbd20": "Fixed missing update in ODE event handlers.", "math-9aabf587": "Fixed inverse cumulative probability for uniform distribution.", "math-d270055e": "Fixed NullPointerException in 2D and 3D sub-line intersections.", "math-86545dab": "Fix creation of Fraction/BigFraction objects in maxDenominator mode when the value is close to an actual fraction.", "oak-83427028": "Property value converion ignores reisdual property definition", "oak-2b5d3afb": "Full-text search on the traversing index fails if the condition contains a slash", "oak-e39b4d96": "Full-text search on the traversing index fails if the condition contains a slash  - added dot character to the full-text checks", "oak-ecc5bdfd": "Full-text search on the traversing index fails if the condition contains a slash  - added node name to the full-text checks", "oak-b2ca8baa": "Property Index: cost calculation is wrong (zero) when searching for many values", "oak-0adf3a6e": ": Folder containing an admin user should not be removed", "oak-79467350": "XPath query failures for mvps", "oak-9238264d": "XPath failures for typed properties", "oak-4ce4e3c9": "- Node.getNodes throwing exception if user does not have access to any child node", "oak-531aca78": "IllegalArgumentException on Row.getValues()  - null guard", "oak-d7f0f180": "IllegalArgumentException on Row.getValues()", "oak-2e20589f": "CacheLIRS implementation incomplete", "oak-be44b816": "QueryManager does not have autorefresh  - fix and test", "oak-7ae92779": "SegmentNodeStore rebase operation assumes wrong child node order", "oak-a8c925e0": "Query constraints marked as invalid in the case of an mvp", "oak-459bd065": "Node#setProperty(String, Calendar) doesn't take time zone in account", "oak-5286861d": "Empty branch commit returns head revision on trunk", "oak-2f95b81f": "Repeated MongoMK.rebase() always adds new revision", "oak-f64e8adc": "PropertyIndex cost calculation is faulty", "oak-c05cec12": ": Invalid JCR paths not caught", "oak-61c877d8": ": NPE if TreePermissionImpl if tree does not have a primary type", "oak-342809f7": "Inconsistent handling of invalid names/paths", "oak-84fb6b29": "MutableTree#isNew: replace implementation by NodeBuilder#isNew", "oak-f2bb1a17": "MutableTree#isNew: replace implementation by NodeBuilder#isNew - Rebasing should correctly set the base state of the KernelNodeBuilder and the MongoNodeBuilder - MongoNodeBuilder needs to calculate its base state instead of relying on that of the MemoryNodeBuilder backing it", "oak-f72dd8d1": "Uploading large number of files to single folder fails.", "oak-52372042": "Parallel execution of ConcurrentReadAccessControlledTreeTest fails with MongoMK - change MongoMK.reset() to actually undo the commits, applying the reverse diff is not sufficient - additional tests", "oak-cb3ac20d": "Lucene Index should ignore property existence checks", "oak-a9efe3c4": "Wildcards in relative property paths don't work in search expressions", "oak-e403e003": "Path parsing must support SNS indexes, irrespective of SNS support", "oak-3535afe2": "Session.nodeExists(\"/foo/bar[2]\") must not throw PathNotFoundException", "oak-117b0a3d": "Node.hasNode(\"foo[2]\") must not throw PathNotFoundException", "oak-1beb2a50": "Upgrade should not overwrite new oak specific builtin nodetypes", "oak-b4a93c81": "Always create new UUID on ImportBehavior.IMPORT_UUID_CREATE_NEW", "oak-0c3b3306": "Guard against invalid/missing checkpoints", "oak-25a70439": "Parallel execution of SimpleSearchTest fails with MongoMK - publish current head revision first to revision comparator - enable tests", "oak-b8fe2ded": "NodeType index doesn't respect the declaringNodeTypes setting", "oak-70564c7c": "Revisit full-text queries in case of multiple tokens  - introduced a MultiPhraseQuery for the multiple token case  - fixed a bug in the tokenizer", "oak-14849e22": "java.lang.IllegalArgumentException when running FlatTreeWithAceForSamePrincipalTest", "oak-0c3e3d70": "Range check fails with IllegalArgumentException", "oak-73cc2442": "MoveDetector does not detect moved nodes that have been moved in an earlier commit already Properly annotate moved node in the face of moves from earlier commits", "oak-69ba2a54": "XPath queries with ISO9075 escaped properties don't work", "oak-64045631": "Inconsistent state in Mongo/KernelRootBuilder", "oak-bc7b7e8c": ": ACE merging not behaving correctly if not using managed principals", "oak-438e31a7": "Better support for RangeIterators", "oak-69b68890": "    OAK-1363", "oak-05c89637": "CacheLIRS concurrency issue", "oak-b481a14c": "CacheLIRS concurrency issue (allow concurrent clear and refresh without loader)", "oak-ce0b0955": "XPath queries: compatibility for missing @ in front of property names", "oak-279bb3ce": "Slow event listeners do not scale as expected", "oak-c2f5ca6c": "Slow event listeners do not scale as expected", "oak-808ac9c0": "Query: use \"union\" for complex XPath queries that use multiple \"or\"", "oak-f1ba7a42": ":childOrder out of sync when node is made orderable concurrently", "oak-dde7de85": "Commit.rollback() may remove changes from other commit", "oak-7c62bd81": "PhraseQuery fails due to missing posiion info in indexed fields", "oak-86edbffb": "Oak Analyzer can't tokenize chinese phrases", "oak-6d8146f8": "Item names with trailing spaces should not be allowed", "oak-fdc54465": "Creating multiple checkpoint on same head revision overwrites previous entries", "oak-01a8b283": "- DataStoreBlobStore does not take into maxLastModifiedTime when fetching all chunks", "oak-c91bfa54": "- DataStoreBlobStore does not take into maxLastModifiedTime when fetching all chunks", "oak-3efb5cbf": "Node not accessible after document split", "oak-63070cf9": "Lucene should not serve queries for what it doesn't index", "oak-073b814c": "Node isNew() is false in case the node is removed and added in same commit Treat a replaced builder as new, enable test cases", "oak-1552be04": ": Unresolved conflicts in TokenProviderImpl#createToken()", "oak-c3773d53": "Missing commit hooks in upgrade", "oak-26041fe7": "Cross foreign cluster revision comparison may be wrong", "oak-7ba9dd66": "DocumentNodeStore revision GC removes intermediate docs", "oak-024e5d37": "Repository upgrade does not copy default values of property definitions Copy default values of property definitions during upgrade", "oak-8188ef54": "Incorrect handling of multivalued comparisons in queries", "oak-591e4d4a": "AsyncIndexUpdate may resurrect nodes", "oak-f37ce716": "- DocumentNodeStore does not make use of References while serializing Blob", "oak-192ee9e4": "Document split suppressed with steady load on many cluster nodes", "oak-9d36bede": "Stale cache after MongoMK GC", "oak-2426deae": "Async index update persists conflict markers", "oak-dd3437d4": "ConcurrentConflictTest fails occasionally", "oak-07646fba": "Upgraded version history has UUIDs as jcr:frozenUuid of non-referenceable nodes", "oak-08ba79d4": "Upgraded version history has UUIDs as jcr:frozenUuid of non-referenceable nodes", "oak-9f7c1df0": "Upgraded version history has UUIDs as jcr:frozenUuid of non-referenceable nodes", "oak-16225d51": "MongoMK GC removes documents with data still in use", "oak-077efee5": "ConstraintViolationException seen with multiple Oak/Mongo with ConcurrentCreateNodesTest", "oak-78c37386": "NPE in MarkSweepGarbageCollector.saveBatchToFile during Datastore GC with FileDataStore", "oak-016df669": "NodeDocument _modified may go back in time", "oak-3e83a4c1": "NodeDocument _modified may go back in time", "oak-ca36450e": "IllegalStateException while trying retrieve rows information from QueryResult", "oak-093b9128": "Default sync handler property mapping does not allow constant properties", "oak-7fe28a0e": "Trying to remove a missing property throws PathNotFoundException", "oak-3ae276c1": "Indexes: re-index automatically when adding an index", "oak-716e1237": "Hourly async reindexing on an idle instance", "oak-9c2421ed": "- Unnecessary invocations of LastRevRecovery when recovery already done.", "oak-35562cce": "PropertyIndex only considers the cost of a single indexed property", "oak-b6f89048": "Ordered index fails with old index content", "oak-df59fb45": "Ordered index fails with old index content", "oak-705ce1d1": "NodeStoreKernel doesn't handle array properties correctly", "oak-9225a3e2": "- UnmergedBranch state growing with empty BranchCommit leading to performance degradation", "oak-913c2f53": "TarMK compaction can create mixed segments", "oak-c215b267": "TarMK compaction can create mixed segments  - allowed the compactor to take into consideration the initial state", "oak-2e16a983": "Query: UnsupportedOperationException for some combinations of \"or\" and \"and\" conditions", "oak-93c1aa40": "AsyncIndexUpdate unable to cope with missing checkpoint ref", "oak-4bfbfcdd": "ContentMirrorStoreStrategy should utilize path restriction when available", "oak-f620b79b": ": TokenLoginModule can't handle case insensitive userids OAK-1984: adjust test case to match issue resolution", "oak-004db804": "XPath queries with certain combinations of \"or\" conditions don't use an index OAK-2022 XPath queries with \"order by\" are never converted to \"union\"", "oak-e30023ba": "- Oak Lucene index doesn't get notified about updates when index is stored on the file system", "oak-a0a495f0": "Missing privileges after repository upgrade Don't copy built in privileges", "oak-ca63fdf3": "Missing privileges after repository upgrade Run repository initialisers of the security configurations on upgrade", "oak-4af0d4ee": "ArrayIndexOutOfBoundsException in Segment.getRefId() - Applying Tom's fix - Asserting length <= buffer.length - More aggressive tests case", "oak-5c4589bd": "Range queries and relative properties resultset should be consistent with JR2", "oak-daf9a4ef": "RootImplFuzzIT test failures", "oak-c7669f31": "- Reindex removes all nodes under index defenition node", "oak-a1556c30": "[Ordered Index] Indexing on large content is slow", "oak-5931a4a7": "Non-blocking reindexing doesn't finish properly", "oak-f2740ce1": "- Ordered index does not return relative properties for un-restricted indexes", "oak-29d3d8f1": "- Lucene index not created if no node is indexed", "oak-a28098fd": "Session.getItem violates JCR Spec Applying patch. Credits to Will McGauley", "oak-dcadb0e1": ": UUID collision check is not does not work in transient space", "oak-6dde8e9d": "Query with mixed full-text, \"and\", \"or\" conditions fails", "oak-08b25cb0": "- Lucene Index property definition is ignored if its not in includePropertyNames config", "oak-e33328e0": "Sling I18N queries not supported by Oak (partial fix)", "oak-0ac7ff20": "TarMK Cold Standby can corrupt bulk segments", "oak-57bd2dc5": "DocumentNS may expose branch commit on earlier revision", "oak-f4d5bbe1": "Incorrect recovery of _lastRev for branch commit", "oak-ca85ecce": "Released checkpoint can still be retrieved", "oak-1d08cbd3": "DocumentNodeStore.diffManyChildren() reads too many nodes", "oak-408a566e": "- Field boost not working if the property for indexing is picked using aggregate index rules", "oak-d0f6715d": "NodeDocument.getNodeAtRevision() may read too many revisions", "oak-a0dc4c89": "Diff reads too many nodes", "oak-74f22886": "TarMK Cold Standby expose standby read timeout value  - default timeout value for tests is too small", "oak-b3071839": "read is inefficient when there are many split documents", "oak-90ea7aa5": "NPE in DocumentNodeStore#retrieve for non existing checkpoint Add null check and test case", "oak-487de751": "- Possibility of overflow in file length calculation", "oak-0fa892b3": "issues with JsopBuilder.encode and .escape", "oak-7c320b1e": "- optimize escape/encode not to encode characters >= 127, update tests (patch by Thomas Mueller)", "oak-8079f7b5": "- add handling for broken surrogate pairs, because they won't round-trip through UTF-8 (and some databases) otherwise", "oak-24ce6788": "ValueFactory: Missing identifier validation when creating (weak)reference value from String", "oak-039f892d": "int overflow with orderby causing huge slowdown", "oak-24cb1908": "DocumentNodeStore revision GC may lead to NPE", "oak-920f32d0": "- [LucenePropertyIndex] full-text search on first level relative node returns no result", "oak-e6d4f9a6": "XPath to SQL-2 conversion fails due to escaping error", "oak-be3a9114": "TARMK Cold Standby size increase due to checkpoints copy  - switched sync to a different approach, to leverage existing recordid info", "oak-7fca85bf": "IllegalStateException for ValueMap on _revisions", "oak-8159fc21": "Lucene AND query with a complex OR phrase returns incorrect result Fixed by not flattening the boolean query", "oak-7e250001": "UpdateOp.Key.equals() incorrect", "oak-beaca1a4": "- IndexPlanner returning plan for queries involving jcr:score", "oak-ea7a6199": "NoSuchElementException thrown by NodeDocument", "oak-60186813": ": Long overflow in PermissionEntryProviderImpl", "oak-977a31d8": "- Error while configuring analyzer by composition", "oak-239de7b8": "Entries in _commitRoot not purged", "oak-dfa87520": "- Lucene index rules should be case insensitive", "oak-77d2d3b0": "- Failure in one of the batch in VersionGC might lead to orphaned nodes", "oak-36fe017c": "DocumentNodeStore.dispose() may leave repository in an inconsistent state", "oak-72d24f4b": "- IndexCopier might create empty files in case of error occuring while copying", "oak-d2da7499": "Blob GC throws NPE", "oak-0598498e": "DocumentNodeStore.dispatch() may pass null to NodeStateDiff", "oak-429baf4d": ": TreeTypeProvider treates optimized node type definition info as Ac-Content", "oak-1bf5c550": "- potential clash of commit id's after restart - added test case", "oak-db19e70f": "Tree.getStatus() and Tree.getPropertyStatus() fail for items whose parent has been removed", "oak-3979fa8d": "- close cloned OakIndexInput instances on close of main one", "oak-f51ea2a2": "XPath backwards compatibility issue with false() and true()", "oak-a2950285": "Parent of unseen children must not be removable", "oak-44585b0c": "AccessDenied when modifying transiently moved item with too many ACEs", "oak-5449bf39": "PathUtils.isAncestor(\"/\", \"/\") should return false but returns true", "oak-3bf07779": "Index updation fails on updating multivalued property", "oak-eabb4066": "SQL2 query with union, limit and offset can return invalid results", "oak-5135cf4b": "VersionablePathHook must not process hidden nodes", "oak-147515ae": "Async Update fails after IllegalArgumentException", "oak-494da6de": "UserValidator and AccessControlValidator must not process hidden nodes", "oak-89317b28": "Hierarchy conflict detection broken", "oak-7552a10b": "- Locking issues seen with CopyOnWrite mode enabled", "oak-33c18762": "LastRevRecoveryAgent can update _lastRev of children but not the root", "oak-29e5b734": ": Redundent entries in effective policies per principal-set", "oak-ba38c380": "LIRS cache: zero size cache causes IllegalArgumentException", "oak-25850476": "Revision GC fails when split documents with very long paths are present", "oak-38f5ef13": "Version garbage collector doesn't collect a rolled back document if it was never deleted", "oak-311e8b33": "SegmentWriter doesn't properly check the length of external blob IDs Proper length check and unit test. Credits to Francesco Mari for the patch", "oak-d10362c0": "- AsyncIndexer fails due to FileNotFoundException thrown by CopyOnWrite logic", "oak-f3c9c818": "NPE in RecordIdMap * Properly guard against NPE * Added test case for empty map", "oak-c65b07c3": "- Global fulltext index returning plan for pure NodeType queries", "oak-e115fd90": "Trailing slash not removed for simple path in JCR to Oak path conversion Thanks Chetan for the patch", "oak-786b3d76": "- Lucene suggestions shouldn't be restricted to specific node types", "oak-64712735": "Some version copy settings conflicts with the earlyShutdown", "oak-4416a9f8": "consistently check the checked-out state of a Node for property modifications", "oak-e12e2052": "- IndexRule not respecting inheritence based on mixins", "oak-5f863af6": "Evaluation with restriction is not consistent with parent ACLs", "oak-194999ed": "SplitOperations purges _commitRoot entries too eagerly", "oak-06812d25": "- Boosting fields not working as expected", "oak-00b9bc52": "Two spaces in SQL2 fulltext search -> error", "oak-c83755c3": "NPE during syncAllExternalUsers in LdapIdentityProvider.createUser", "oak-978c77ff": "Inconsistent read on DocumentNodeStore startup", "oak-2f85bd78": "- Node name having non space whitspace chars should not be allowed", "oak-f4349a96": "change ClusterNodeInfo to potentially wait for an abandoned cluster id to become available", "oak-b76b31f7": "Commit does not detect conflict when background read happens after rebase", "oak-17032c50": "- Intermittent IllegalMonitorStateException seen while releaseing IndexNode", "oak-ff81ef72": "NodeDocument.getNodeAtRevision can go into property history traversal when latest rev on current doc isn't committed", "oak-01f5a26f": ": Troublesome ExternalIdentityRef.equals(Object) implementation", "oak-5138a1e2": "Test failure: CompactionMapTest.removeSome Unconditionally clear recent keys on compress", "oak-24f7f60a": ": Node.addNode(String, String) may check permissions against the wrong node", "oak-4d231938": ": TreeTypeProvider returns wrong type for version related node type definitions", "oak-9772f5b2": "Initial read of _lastRev creates incorrect RevisionComparator", "oak-2565d74a": "BackgroundLeaseUpdate not scheduled when asyncDelay=0", "oak-fcd64766": "- Mixin based rules not working for relative properties", "oak-90ad50da": "RDB/MongoDocumentStore may return stale documents", "oak-4e245a76": "missing support for relative path consisting of parent-element", "oak-a5ff019e": "Sometimes hierarchy conflict between concurrent add/delete isn't detected", "oak-ab1a0cc2": "EmptyNodeState.equals() broken", "oak-306a9e00": "- QueryParse exception when fulltext search performed with term having '/'", "oak-94110f21": ": Provide Simple Exception Name in Credentials Attribute for PW Expiry", "oak-2ac1dccd": "NodeDocument.getNewestRevision() incorrect when there are previous documents", "oak-621a5101": "Query test failures on buildbot - revert changes from revision 1399172 - use default login module configuration when none is given", "oak-2a02a138": "Hidden properties in lucene analyzer configuration fail to construct analyzers", "oak-c13708e3": "RDBBlobStore - fix problem when cleaning up data rows", "oak-4faf31e3": "- Lucene index / compatVersion 2: search for 'abc!' does not work", "oak-94c6c575": "Branch reset does not revert all changes", "oak-690fb9f4": "Commit fails even though change made it to the DocumentStore", "oak-99996c25": "- OakDirectory not usable in readOnly mode with a readOnly builder", "oak-b939aa6e": ": Sysview import of single valued mv property creates sv property", "oak-4ed7bc8e": ": Inconsistency in Node#setProperty in case of null value", "oak-e6c31270": "Inconsistency in Node#setProperty in case of null value - return a Property instance at the location where the property was removed - updated tests in CRUDTest accordingly", "oak-f4324736": "- LuceneIndexProviderService may miss on registering PreExtractedTextProvider", "oak-557eec4f": "o.a.j.o.spi.query.Filter exposes unexported class o.a.j.o.query.ast.SelectorImpl", "oak-52ca008c": "SplitOperations may not retain most recent committed _commitRoot entry", "oak-9a109aa3": "Suggestion dictionary don't update after suggestUpdateFrequencyMinutes unless something else causes index update", "oak-56accddf": "- avoid building suggester with existing directory when no content is indexed", "oak-9120fd1b": ": fix for compareAgainstBaseState which properly handles deletion of last child and adding multiple new children in same go", "oak-374e3f3d": "Fixed version-related properties for the simple versionable nodes", "oak-2a489d05": "QueryEngine adding invalid property restriction for fulltext query", "oak-36e70bd7": "NodeBuilder.reset might lead to inconsistent builder", "oak-916cd92f": "Binaries might get removed by garbage collection while still referenced change prefix for binaries from bin: to :blobId:", "oak-cdb34ffc": "FileStore.flush prone to races leading to corruption Make SegmentBufferWriterPool.flush synchrnous again but avoid flusing segments while holding locks", "oak-c02ecef8": "MemoryPropertyBuilder.assignFrom leads to ClassCastException on getPropertyState with date properties", "oak-06c367af": "- Cost per entry for Lucene index of type v1 should be higher than that of v2", "oak-f303c916": "SegmentWriter saves references to external blobs", "oak-59a83d23": "Non-root lucene index throws exception if query constraints match root of sub-tree", "oak-b0014b7d": "IndexOutOfBoundsException in FileStore.writeStream Define segment gc generation = 0 for bulk segments and consider the type of the segment in the gc generation methods accordingly", "oak-74cbba24": "Stale cluster ids can potentially lead to lots of previous docs traversal in NodeDocument.getNewestRevision", "oak-002c5845": "Lucene query fails if search string contains = symbol", "oak-037dea72": "XPath: queries starting with \"//\" are not always converted correctly", "oak-ca05fd06": "XPath: querying for nodes named \"text\", \"element\", and \"rep:excerpt\" fails", "oak-e33516d5": ": DefaultSyncContext.syncMembership may sync group of a foreign IDP", "oak-668f08f2": "Incomplete journal when move and copy operations are involved", "oak-d645112f": "segment to segment-tar should migrate checkpoint info", "oak-08f0b280": "Possible overflow in checkpoint creation", "oak-275eca83": "Possible overflow in checkpoint creation  - fix for oak-segment", "oak-7441a3d5": "- Index path property should be considered optional for copy on read logic", "oak-c9765c21": "Ignore files in the root directory of the FileDataStore in #getAllIdentifiers", "oak-00df38d2": "Adding a node with the name of a removed node can lead to an inconsistent hierarchy of node builders", "oak-999097e1": " Node builder for existing node return null for base state", "oak-a7f0e808": "NPE in the TypeValidator when using the Lucene Index", "oak-3270e761": "Adding a node to a node that doesn't accept children doesn't fail with ConstraintViolationException", "oak-b62f1c26": "Wrong results and NPE with copy operation (support the copy operation in the Indexer and the SimpleKernel)", "oak-f2a2edec": "NamePathMapper should fail on absolute paths escaping root", "oak-61381ea2": "SQL-2 query parser doesn't detect some illegal statements", "oak-b896c926": "Item names starting with '{X}' cause RepositoryException", "oak-f63d745a": "Multivalued properties with array size 0 forget their type", "oak-ec961a38": "IllegalStateException in MemoryNodeBuilder", "oak-90c45a02": "NodeBuilder deleted child nodes can come back", "oak-a8493efc": "The Property2Index eagerly and unnecessarily fetches all data: remove unused code (the case where there is no index); make methods static when possible; use PathUtils instead of parsing the path itself", "oak-ffa818f3": "Wrong compareTo in micro-kernel Id class", "oak-3ce758b7": "PutTokenImpl not thread safe", "oak-428e32c6": "Query: unexpected result on negative limit / offset", "oak-717186d6": "Moving larger trees cause OutOfMemoryError (diff ignores depth for added nodes)", "oak-3f51fb09": "PropertyStates#createProperty ignores namespace mappings when creating states of type NAME and PATH", "oak-7d72e6ed": "Query: for joins, sometimes no or the wrong index is used", "oak-9b268da0": "- Microkernel.diff returns empty diff when there are differences", "oak-f0fbacab": "Node becomes invalid after Session#move() throw invalid item state exception on disconnected nodes", "oak-df9e6913": "Calling addNode on a node that has orderable child nodes violates specification", "oak-6feacf6b": "AssertionError in MemoryNodeBuilder", "oak-00b4b8a0": "Moving or deleting tree instances with status NEW doesn't change its status to DISCONNECTED", "oak-7a84b3a8": "NPE trying to add a node to an nt:folder node", "oak-55a4f738": ": Revisit PrivilegeDefinitionStore's use of null as a child name parameter", "oak-6c54045d": "Access to disconnected MemoryNodeBuilder should throw IllegalStateException", "oak-8ed779dc": "Assertion error when adding node with expanded name", "oak-35a7f014": "Malformed solr delete query", "oak-503451c1": "ContentMirrorStoreStrategy fails to enforce uniqueness and is slow", "oak-6fc5ea9d": "TreeImpl#*Location: unable retrieve child location if access to parent is denied tentative fix", "oak-45b110e1": "MemoryNodeBuilder.setNode() loses property values", "oak-7acb091a": "Branch conflicts not detected by MongoMK", "oak-65aa40dd": "Condition check broken in MemoryDocumentStore", "oak-6d82cb64": ": PathUtils#getDepth returns 1 for empty path", "oak-e1ae968c": "MongoMK: split documents when they are too large - Parse PREVIOUS into Revision/Range on demand - More tests", "oak-0be7e8f0": "Tree has wrong parent after move - Initial fix - Regression tests"}