{"id":1144,"status":"Fixed","summary":"precondition crash: goog.scope local with aliased in the type declaration","labels":["Type-Defect","Priority-Medium"],"stars":0,"commentCount":5,"comments":[{"id":0,"commenterId":-5060162230523776870,"content":"var goog \u003d {};\r\ngoog.scope;\r\n\r\nvar ns \u003d {};\r\nns.sub \u003d {};\r\n/** @constructor */\r\nns.sub.C \u003d function() {};\r\n\r\n\r\ngoog.scope(function() {\r\n  var sub \u003d ns.sub;\r\n  /** @type {sub.C} */\r\n  var x \u003d null;\r\n});\r\n\r\n\r\nproduces:\r\n\r\njava.lang.IllegalStateException at com.google.common.base.Preconditions.checkState(Preconditions.java:137) at com.google.javascript.jscomp.ScopedAliases$AliasedTypeNode.applyAlias(ScopedAliases.java:236) at com.google.javascript.jscomp.ScopedAliases.hotSwapScript(ScopedAliases.java:147) at com.google.javascript.jscomp.ScopedAliases.process(ScopedAliases.java:128) at ","timestamp":1384801539,"attachments":[]},{"id":1,"commenterId":-7699928860083865744,"content":"whew, this is really subtle, and it took me a while to figure out what was going on. We do a shallow clone of the jsdoc multiple times in the tree. This usually makes total sense, because jsdoc is usually immutable. But ScopedAliases also rewrites jsdoc, and it\u0027s getting into a weird state where its internal bookkeeping is wrong.","timestamp":1385012066,"attachments":[]},{"id":2,"commenterId":-7699928860083865744,"content":"fix posted here:\r\nhttps://codereview.appspot.com/30180043/","timestamp":1385013196,"attachments":[]},{"id":3,"commenterId":-7699928860083865744,"content":"This issue was closed by revision aae547f4d911.","timestamp":1385433629,"attachments":[]},{"id":4,"commenterId":-7699928860083865744,"content":"This issue was closed by revision aae547f4d911.","timestamp":1389758016,"attachments":[]}]}