{"id":1058,"status":"Fixed","summary":"Template types on methods incorrectly trigger inference of a template on the class if that template type is unknown","labels":["Type-Defect","Priority-Medium"],"stars":0,"commentCount":4,"comments":[{"id":0,"commenterId":-2708059715677396299,"content":"See i.e.\r\n\r\n\r\n\r\n/**\r\n  * @constructor\r\n  * @template CLASS\r\n  */\r\nvar Class \u003d function() {};\r\n\r\n/**\r\n  * @param {function(CLASS):CLASS} a\r\n  * @template T\r\n  */\r\nClass.prototype.foo \u003d function(a) {\r\n  return \u0027string\u0027;\r\n};\r\n\r\n/** @param {number} a\r\n  * @return {string} */\r\nvar a \u003d function(a) { return \u0027\u0027 };\r\n\r\nnew Class().foo(a);\r\n\r\n\r\nThe CLASS type is never specified. If the @template T line is removed from the foo method, the block compiles with but with the @annotation on the method, the compiler seems to try to infer CLASS from the usage and fails compilation.","timestamp":1375395583,"attachments":[]},{"id":1,"commenterId":-5060162230523776870,"content":"Thanks for the report.","timestamp":1375557337,"attachments":[]},{"id":2,"commenterId":-8769171937076622550,"content":"This issue was closed by revision b168c8822b2d.","timestamp":1381274324,"attachments":[]},{"id":3,"commenterId":-8769171937076622550,"content":"This issue was closed by revision b168c8822b2d.","timestamp":1381947641,"attachments":[]}]}