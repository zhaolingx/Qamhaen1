{"id":1037,"status":"WontFix","summary":"Inconsistent handling of non-JSDoc comments","labels":["Type-Defect","Priority-Medium"],"stars":0,"commentCount":3,"comments":[{"id":0,"commenterId":-1650257225566936398,"content":"\u003cb\u003eWhat steps will reproduce the problem?\u003c/b\u003e\n\u003cb\u003e1.\u003c/b\u003e\n\u003cb\u003e2.\u003c/b\u003e\n\u003cb\u003e3.\u003c/b\u003e\n\r\n\u003cb\u003eWhat is the expected output? What do you see instead?\u003c/b\u003e\n\r\nWhen given:\r\n\r\n    /* @preserve Foo License */\r\n    alert(\u0026quot;foo\u0026quot;);\r\n\r\nIt spits out:\r\n\r\n    stdin:1: WARNING - Parse error. Non-JSDoc comment has annotations. Did you mean to start it with \u0027/**\u0027?\r\n    /* @license Foo License */\r\n    ^\r\n    \r\n    0 error(s), 1 warning(s)\r\n    alert(\u0026quot;foo\u0026quot;);\r\n\r\nIf I take the suggestion and change the opening of the comment to \u0027/**\u0027, everything is great.  However, if I change it to \u0027/*!\u0027, the warning goes away, but it doesn\u0027t preserve the comment either.\r\n\r\nI expect it to print the above warning, or preserve the comment.  That it does neither when starting with \u0026quot;/*!\u0026quot; (and every other character I tried) is confusing.\r\n\r\n\u003cb\u003eWhat version of the product are you using? On what operating system?\u003c/b\u003e\n\r\nTested with my compilation of the \u0026quot;v20130603\u0026quot; tag:\r\n\r\n    Closure Compiler (http://code.google.com/closure/compiler)\r\n    Version: v20130603\r\n    Built on: 2013/07/07 15:04\r\n\r\nAnd with the provided binary:\r\n\r\n    Closure Compiler (http://code.google.com/closure/compiler)\r\n    Version: v20130411-90-g4e19b4e\r\n    Built on: 2013/06/03 12:07\r\n\r\nI\u0027m on Parabola GNU/Linux-libre with Java:\r\n\r\n    java version \u0026quot;1.7.0_40\u0026quot;\r\n    OpenJDK Runtime Environment (IcedTea 2.4.0) (ArchLinux build 7.u40_2.4.0-1-i686)\r\n    OpenJDK Server VM (build 24.0-b40, mixed mode)\r\n\r\n\u003cb\u003ePlease provide any additional information below.\u003c/b\u003e\n\r\n","timestamp":1373239101,"attachments":[]},{"id":1,"commenterId":4865484112040790759,"content":"Thanks for the report. Hopefully I\u0027ll fix this today.","timestamp":1373306747,"attachments":[]},{"id":2,"commenterId":4865484112040790759,"content":"I submitted a change today that improved detection of suspicious block comments. See\r\n\r\nhttps://code.google.com/p/closure-compiler/source/detail?r\u003da8a456b183c9600658bcb0c72091bae1a30a4fda\r\n\r\nHowever, it doesn\u0027t fix the current issue. Basically, we want to warn for comments which contain annotations that would be checked inside a jsdoc. For example, if one writes\r\n/**\r\n * The first @param of this function is a number\r\n */\r\nthe compiler ignores the @param because it\u0027s not the first thing in that line of text. The suspicious-comment check shouldn\u0027t warn about such cases, so if there are non blank characters between /* and the tag, we don\u0027t warn. I didn\u0027t think it was worth it to special-case the check just for the case when the comment starts with /*!\r\n\r\nIn any case, thanks for the report! The new check found many suspicious comments, even though it doesn\u0027t fix the originally reported one.","timestamp":1373673090,"attachments":[]}]}