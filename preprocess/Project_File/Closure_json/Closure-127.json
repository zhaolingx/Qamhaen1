{"id":936,"status":"Fixed","summary":"Break in finally block isn\u0027t optimized properly","labels":["Type-Defect","Priority-Medium"],"stars":0,"commentCount":3,"comments":[{"id":0,"commenterId":1886111526137396270,"content":"  b: try { throw(\u0026quot;throw me\u0026quot;) } finally { /* fake catcher */ ; break b }; console.log(\u0026quot;ok then...\u0026quot;)\r\n\r\n... gets optimized into ...\r\n\r\n  throw\u0026quot;throw me\u0026quot;;\r\n\r\n... which is not the same.\r\n\r\nThe break in the finally block should prevent the exception from being passed on. The expected result is:\r\n\r\n   console.log(\u0026quot;ok then...\u0026quot;)\r\n\r\nECMA-262 says:\r\n\r\nThe production TryStatement : try Block Finally is evaluated as follows:\r\n\r\nLet B be the result of evaluating Block.\r\nLet F be the result of evaluating Finally.\r\nIf F.type is normal, return B.\r\nReturn F.\r\n\r\nF.type in this case would be \u0027break\u0027 and not \u0027normal\u0027, so \u0027break\u0027 overrides the \u0027throw\u0027 of B\r\n\r\nThis is with the build available for download on Feb 28 2013.\r\n","timestamp":1362478931,"attachments":[]},{"id":1,"commenterId":-5060162230523776870,"content":"Thanks for the report.","timestamp":1362496563,"attachments":[]},{"id":2,"commenterId":-8769171937076622550,"content":"This issue was closed by revision 211dc0161ae7.","timestamp":1364000164,"attachments":[]}]}