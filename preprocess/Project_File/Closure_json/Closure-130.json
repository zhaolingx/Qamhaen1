{"id":931,"status":"Fixed","summary":"arguments is moved to another scope","labels":["Type-Defect","Priority-Medium"],"stars":0,"commentCount":6,"comments":[{"id":0,"commenterId":-4866375781020184057,"content":"Using ADVANCED_OPTIMIZATIONS with CompilerOptions.collapsePropertiesOnExternTypes \u003d true a script I used broke, it was something like:\r\n\r\nfunction () {\r\n  return function () {\r\n    var arg \u003d arguments;\r\n    setTimeout(function() { alert(args); }, 0);\r\n  }\r\n}\r\n\r\nUnfortunately it was rewritten to:\r\n\r\nfunction () {\r\n  return function () {\r\n    setTimeout(function() { alert(arguments); }, 0);\r\n  }\r\n}\r\n\r\narguments should not be collapsed.","timestamp":1361893172,"attachments":[]},{"id":1,"commenterId":-5060162230523776870,"content":"Can you provide an exact snippet, I\u0027m not able to reproduce this problem.  Also, note that code that you provide here has a typo (\"arg\" vs. \"args\").\r\n\r\nCompilerOptions.collapsePropertiesOnExternTypes should also have nothing to do with inlining variables.\r\n","timestamp":1361913805,"attachments":[]},{"id":2,"commenterId":-7699928860083865744,"content":"Yeah, we almost always model \"arguments\" as \"a global variable that can change over time.\" If there was a bug where a local alias \"arguments\" was getting inlined, then it\u0027s likely that bug would affect all global variables, and some project would have run into it by now.\r\n\r\nI suspect that you did see a bug, but that you mis-diagnosed what triggered it... and in an attempt to simplify the repro steps, you edited out the trigger.","timestamp":1361933849,"attachments":[]},{"id":3,"commenterId":-4866375781020184057,"content":"I\u0027ve added an example of this behavior in the following repository:\r\nhttps://github.com/robbert/closure-compiler/tree/issue-931\r\n\r\nThe following commit contains one build with and one without the flag set to true:\r\nissue-931/jQueryDeferred.min.js\r\nissue-931/jQueryDeferred.min-collapsePropertiesOnExternTypes.js\r\n\r\nhttps://github.com/robbert/closure-compiler/commit/bf59bcf89262c76de9ab6e75599bdba0291a31cf\r\n\r\nExcerpt of collapsePropertiesOnExternTypes \u003d true:\r\n\r\nfunction C() {\r\n  var a \u003d D;\r\n  return function() {\r\n    console.log(\"This is were arguments originally is defined\");\r\n    var b \u003d new p;\r\n    this.d.then(function(d) {\r\n      var c \u003d d[a];\r\n      console.log(\"This is it ends up\");\r\n      c \u003d c.apply(d, arguments);\r\n      c instanceof p ? c.then(z(b, b.resolve), z(b, b.reject)) : c instanceof A ? c.d.then(z(b, b.resolve), z(b, b.reject)) : b.resolve(c);\r\n      return c\r\n    }, B);\r\n    return new A(b)\r\n  }\r\n}\r\n\r\nWithout that flag, arguments is on the fifth line as it is supposed to:\r\n\r\nfunction C() {\r\n  var a \u003d D;\r\n  return function() {\r\n    console.log(\"This is were arguments originally is defined\");\r\n    var b \u003d arguments, d \u003d new p;\r\n    this.d.then(function(c) {\r\n      var f \u003d c[a];\r\n      console.log(\"This is it ends up\");\r\n      c \u003d f.apply(c, b);\r\n      c instanceof p ? c.then(z(d, d.resolve), z(d, d.reject)) : c instanceof A ? c.d.then(z(d, d.resolve), z(d, d.reject)) : d.resolve(c);\r\n      return c\r\n    }, B);\r\n    return new A(d)\r\n  }\r\n}","timestamp":1361979583,"attachments":[]},{"id":4,"commenterId":-5060162230523776870,"content":"Thank you for the detailed reproduction steps, I was able to reproduce this.","timestamp":1361991343,"attachments":[]},{"id":5,"commenterId":-8769171937076622550,"content":"This issue was closed by revision 9fac3ccd2fa9.","timestamp":1362006770,"attachments":[]}]}