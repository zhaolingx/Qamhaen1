{"id":59,"status":"Fixed","summary":"Inheritance not detected when prototype directly assigned","labels":["Type-Defect","Priority-Medium"],"stars":2,"commentCount":6,"comments":[{"id":0,"commenterId":8173196008570380122,"content":"Given the following input JS:\r\n//--------------------------\r\n/**\r\n* @constructor\r\n*/\r\nfunction SuperClass () {\r\n}\r\n\r\nSuperClass.prototype.CustomMethod \u003d function() {\r\n}\r\n\r\n/**\r\n* @constructor\r\n* @extends {SuperClass}\r\n*/\r\nfunction SubClass () {\r\n}\r\nSubClass.prototype \u003d new SuperClass();\r\n\r\n/**\r\n* @override\r\n*/\r\nSubClass.prototype.CustomMethod \u003d function() {\r\n\tthis.myProperty \u003d \u0026quot;value\u0026quot;;\r\n}\r\n\r\nwindow[\u0027SubClassInstance\u0027] \u003d new SubClass();\r\n//---------------------------------\r\n\r\nWhen compiled with ADVANCED_OPTIMIZATIONS produces the warning:\r\nJSC_UNKNOWN_OVERRIDE: property CustomMethod not defined on any superclass\r\nof SubClass\r\n\r\nThis error has been reproduced in both the downloaded compiler and the\r\nCompiler Service UI.\r\n\r\nWhen the prototype assignment is wrapped in a function, it is correctly\r\ndetected. See below:\r\n//---------------------------------\r\nfunction inherit(Child, Parent) {\r\n    Child.prototype \u003d new Parent();\r\n} \r\ninherit(SubClass, SuperClass);\r\n//---------------------------------\r\n","timestamp":1259100550,"attachments":[]},{"id":1,"commenterId":-7699928860083865744,"content":"","timestamp":1259811067,"attachments":[]},{"id":2,"commenterId":-7699928860083865744,"content":"This issue was closed by revision r93.","timestamp":1265394689,"attachments":[]},{"id":3,"commenterId":8173196008570380122,"content":"This issue is not fixed. The above code still generates the warning when the\r\nprototype assignment is not inside a function.","timestamp":1269390814,"attachments":[]},{"id":4,"commenterId":-7699928860083865744,"content":"The test case in r93 disagrees. Can you give a repro case of the warning that you see?","timestamp":1269391173,"attachments":[]},{"id":5,"commenterId":8173196008570380122,"content":"Further testing shows the bug only comes into play in very specific circumstances. It\r\nrequires an extern file as well as aliasing the type with @typedef.\r\n\r\nAttached are the 2 files as simple as I can get them and still get the error.\r\n\r\nI should mention that the compiler I\u0027m testing in was built about 2 hours ago against\r\nthe latest SVN source. I also enabled the ambiguateProperties and\r\ndisambiguateProperties passes.","timestamp":1269398676,"attachments":[{"id":-4114669374124701957,"fileName":"test.js","fileSize":285},{"id":4200761451228632179,"fileName":"testextern.js","fileSize":198}]}]}