{"id":172,"status":"Fixed","summary":"bad type inference for !\u003d undefined","labels":["Type-Defect","Priority-Medium"],"stars":1,"commentCount":2,"comments":[{"id":0,"commenterId":-7699928860083865744,"content":"\u003cb\u003eWhat steps will reproduce the problem?\u003c/b\u003e\n\r\n// \u003d\u003dClosureCompiler\u003d\u003d\r\n// @compilation_level ADVANCED_OPTIMIZATIONS\r\n// @output_file_name default.js\r\n// \u003d\u003d/ClosureCompiler\u003d\u003d\r\n\r\n/** @param {string} x */\r\nfunction g(x) {}\r\n\r\n/** @param {undefined} x */\r\nfunction f(x) {\r\n  if (x !\u003d undefined) { g(x); }\r\n}\r\n\r\n\u003cb\u003eWhat is the expected output? What do you see instead?\u003c/b\u003e\n\r\nJSC_DETERMINISTIC_TEST: condition always evaluates to false\r\nleft : undefined\r\nright: undefined at line 6 character 6\r\nif (x !\u003d undefined) { g(x); }\r\n      ^\r\nJSC_TYPE_MISMATCH: actual parameter 1 of g does not match formal parameter\r\nfound   : undefined\r\nrequired: string at line 6 character 24\r\nif (x !\u003d undefined) { g(x); }\r\n                        ^\r\n\r\nthe second warning is bogus.\r\n\r\n","timestamp":1275609991,"attachments":[]},{"id":1,"commenterId":-7699928860083865744,"content":"This issue was closed by revision r265.","timestamp":1278540868,"attachments":[]}]}