{"id":182,"status":"Fixed","summary":"Lost a JSC_USED_GLOBAL_THIS warning in 0616 release vs 0514","labels":["Type-Defect","Priority-Medium"],"stars":1,"commentCount":3,"comments":[{"id":0,"commenterId":-8565359677229908361,"content":"\u003cb\u003eWhat steps will reproduce the problem?\u003c/b\u003e\n//------------------\r\n// should warn \u0026quot;JSC_USED_GLOBAL_THIS: dangerous use of the global this object\u0026quot; in both methods\r\n// none of these warns in 0616 release\r\nvar NS \u003d {\r\n\tread: function()\r\n\t{\r\n\t\treturn this.foo; // does not warn in 0514 release\r\n\t},\r\n\r\n\twrite: function()\r\n\t{\r\n\t\tthis.foo \u003d 123; // warns in 0514 release\r\n\t}\r\n};\r\n\r\n// only the non-inline notation warns in 0616 release\r\nNS.write2 \u003d function()\r\n{\r\n\tthis.foo \u003d 123;\r\n};\r\n\r\n//-----------------------\r\n\u003cb\u003eWhat is the expected output? What do you see instead?\u003c/b\u003e\nSince the 0514 release warned in in the \u0026quot;write\u0026quot; case above I would expect the 0616 to also report this. \r\n\r\n\u003cb\u003eWhat version of the product are you using? On what operating system?\u003c/b\u003e\nAs said above, 20100514 and 20100616 releases.\r\n\r\n\u003cb\u003ePlease provide any additional information below.\u003c/b\u003e\nI understand that the status is that inline-notation isn\u0027t preferred, though I wouldn\u0027t expect a previous, correct, warning to disappear. (Since I reported issue #144 I\u0027m also aware of the previous limitation in global this).","timestamp":1276777733,"attachments":[]},{"id":1,"commenterId":-5060162230523776870,"content":"Nick you were working on the heuristic for this lately, did you have a comment on this?","timestamp":1277319421,"attachments":[]},{"id":2,"commenterId":-7699928860083865744,"content":"This issue was closed by revision r270.","timestamp":1278716569,"attachments":[]}]}