{"id":61,"status":"Fixed","summary":"Type checker misses annotations on functions defined within functions","labels":["Type-Defect","Priority-Medium"],"stars":7,"commentCount":7,"comments":[{"id":0,"commenterId":-2383702226191207389,"content":"\u003cb\u003eWhat steps will reproduce the problem?\u003c/b\u003e\n1. Compile the following code under --warning_level VERBOSE\r\n\r\nvar ns \u003d {};\r\n\r\n/** @param {string\u003d} b */\r\nns.a \u003d function(b) {}\r\n\r\nfunction d() {\r\n    ns.a();\r\n    ns.a(123);\r\n}\r\n\r\n2. Observe that the type checker correctly emits one warning, as 123 \r\ndoesn\u0027t match the type {string}\r\n\r\n3. Now compile the code with ns.a defined within an anonymous function, \r\nlike so:\r\n\r\nvar ns \u003d {};\r\n\r\n(function() {\r\n    /** @param {string\u003d} b */\r\n    ns.a \u003d function(b) {}\r\n})();\r\n\r\nfunction d() {\r\n    ns.a();\r\n    ns.a(123);\r\n}\r\n\r\n4. Observe that a warning is emitted for calling ns.a with 0 parameters, and \r\nnot for the type error, as though the @param declaration were ignored. \r\n\r\n\u003cb\u003eWhat version of the product are you using? On what operating system?\u003c/b\u003e\nr15\r\n\r\n\u003cb\u003ePlease provide any additional information below.\u003c/b\u003e\n\r\nThis sort of module pattern is common enough that it strikes me as worth \r\nsupporting.\r\n\r\nOne last note to make matters stranger: if the calling code isn\u0027t itself within \r\na function, no warnings are emitted at all:\r\n\r\nvar ns \u003d {};\r\n\r\n(function() {\r\n    /** @param {string\u003d} b */\r\n    ns.a \u003d function(b) {}\r\n})();\r\n\r\nns.a();\r\nns.a(123);\r\n","timestamp":1259166883,"attachments":[]},{"id":1,"commenterId":-7699928860083865744,"content":"thanks for the report. I vaguely recall there was a very specific reason why this\r\ncase wasn\u0027t handled, but I think that reason might have gone away. I\u0027ll play with it\r\nagain and report back.","timestamp":1259811145,"attachments":[]},{"id":2,"commenterId":-7699928860083865744,"content":"notice that if you define ns.a in a local scope, and use it in a later scope, this will now work.\r\n\r\ni\u0027m still working on the case where you define ns.a in a local scope and call it from a global scope.","timestamp":1284825419,"attachments":[]},{"id":3,"commenterId":-5060162230523776870,"content":"Nick, this specific issue is fixed any reason not to close this?","timestamp":1285950211,"attachments":[]},{"id":4,"commenterId":-7699928860083865744,"content":"nope, the specific issue is not fixed. did you read my last comment?","timestamp":1285956282,"attachments":[]},{"id":5,"commenterId":-5060162230523776870,"content":"I understand now.  #3 is fixed now but not the call from global scope.","timestamp":1285962471,"attachments":[]},{"id":6,"commenterId":-7699928860083865744,"content":"This issue was closed by revision r2240.","timestamp":1349452255,"attachments":[]}]}