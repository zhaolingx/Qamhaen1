{"id":378,"status":"Fixed","summary":"Overzealous arguments optimisation","labels":["Type-Defect","Priority-Medium"],"stars":2,"commentCount":15,"comments":[{"id":0,"commenterId":-34019617416909751,"content":"Consider the following JavaScript code:\r\n\r\nfunction d3_call(callback) {\r\n  var f \u003d callback;\r\n  arguments[0] \u003d this;\r\n  f.apply(this, arguments);\r\n  return this;\r\n}\r\n\r\nThis is optimised to:\r\n\r\nfunction d3_call(a){arguments[0]\u003dthis;a.apply(this,arguments);return this};\r\n\r\nHowever, the use of a temporary variable `f` is necessary to avoid `arguments[0] \u003d this` from overwriting the first argument.\r\n\r\nIn the above optimised code, `arguments[0] \u003d this` causes `this` to be assigned to `a`.\r\n\r\nVerified on latest SVN r878.\r\n\r\nSee also: https://github.com/mbostock/d3/issues/closed#issue/68","timestamp":1299949794,"attachments":[]},{"id":1,"commenterId":-215138502632663007,"content":"Good find!\r\n\r\nThe both variable inliner should not be inlining across an arguments access like this.","timestamp":1300093749,"attachments":[]},{"id":2,"commenterId":-5060162230523776870,"content":"","timestamp":1300132548,"attachments":[]},{"id":3,"commenterId":1948758734812428220,"content":"Forgot to mention, I will be looking at this in a bit. Thanks.","timestamp":1300132587,"attachments":[]},{"id":4,"commenterId":-215138502632663007,"content":"FYI: I put in a fix. Currently pending review.","timestamp":1300241752,"attachments":[]},{"id":5,"commenterId":-5060162230523776870,"content":"r911 and r896","timestamp":1300989366,"attachments":[]},{"id":6,"commenterId":-34019617416909751,"content":"Doesn\u0027t appear to work; tested the latest release 20110322 on the code above and the same thing happens.","timestamp":1300990057,"attachments":[]},{"id":7,"commenterId":-5060162230523776870,"content":"Reopen, still an issue.","timestamp":1300991207,"attachments":[]},{"id":8,"commenterId":-7699928860083865744,"content":"This issue was closed by revision r942.","timestamp":1301285685,"attachments":[]},{"id":9,"commenterId":-34019617416909751,"content":"Still not working I\u0027m afraid, the output as of r942 is:\r\n\r\nfunction d3_call(a){var b;arguments[0]\u003dthis;a.apply(this,arguments);return this};\r\n\r\nNotice how nothing is assigned to b and \"a.apply\" is used.","timestamp":1301321401,"attachments":[]},{"id":10,"commenterId":-5060162230523776870,"content":"Reopen.","timestamp":1301325418,"attachments":[]},{"id":11,"commenterId":-7699928860083865744,"content":"it would be nice if there were real integration tests for this issue, rather than just unit tests.","timestamp":1301337366,"attachments":[]},{"id":12,"commenterId":-5060162230523776870,"content":"Should be fixed with r949. Care to verify.","timestamp":1301521734,"attachments":[]},{"id":13,"commenterId":-34019617416909751,"content":"Perfect, thanks!","timestamp":1301569372,"attachments":[]},{"id":14,"commenterId":-7699928860083865744,"content":"","timestamp":1301614508,"attachments":[]}]}