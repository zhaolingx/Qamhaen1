{"id":785,"status":"Fixed","summary":"anonymous object type inference inconsistency when used in union","labels":["Type-Defect","Priority-Medium"],"stars":0,"commentCount":3,"comments":[{"id":0,"commenterId":-2236042086396273250,"content":"Code:\r\n/** @param {{prop: string, prop2: (string|undefined)}} record */\r\nvar func \u003d function(record) {\r\n  window.console.log(record.prop);\r\n}\r\n\r\n/** @param {{prop: string, prop2: (string|undefined)}|string} record */\r\nvar func2 \u003d function(record) {\r\n  if (typeof record \u003d\u003d \u0027string\u0027) {\r\n    window.console.log(record);\r\n  } else {\r\n    window.console.log(record.prop);\r\n  }\r\n}\r\n\r\nfunc({prop: \u0027a\u0027});\r\nfunc2({prop: \u0027a\u0027});\r\n\r\n\r\n\r\n\r\nerrors with:\r\nERROR - actual parameter 1 of func2 does not match formal parameter\r\nfound   : {prop: string}\r\nrequired: (string|{prop: string, prop2: (string|undefined)})\r\nfunc2({prop: \u0027a\u0027});\r\n\r\n\r\nthe type of the record input to func and func2 are identical but the parameters to func2 allow some other type.","timestamp":1343760692,"attachments":[]},{"id":1,"commenterId":-7699928860083865744,"content":"","timestamp":1343784521,"attachments":[]},{"id":2,"commenterId":-7699928860083865744,"content":"This issue was closed by revision r2117.","timestamp":1344005038,"attachments":[]}]}