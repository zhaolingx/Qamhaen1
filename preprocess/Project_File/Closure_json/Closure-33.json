{"id":700,"status":"Fixed","summary":"weird object literal invalid property error on unrelated object prototype","labels":["Type-Defect","Priority-Medium"],"stars":0,"commentCount":3,"comments":[{"id":0,"commenterId":-6289268304558982259,"content":"Apologies in advance for the convoluted repro case and the vague summary.\r\n\r\nCompile the following code (attached as repro.js) with:\r\njava -jar build/compiler.jar --compilation_level\u003dADVANCED_OPTIMIZATIONS --jscomp_error\u003daccessControls --jscomp_error\u003dcheckTypes --jscomp_error\u003dcheckVars --js repro.js *\r\n\r\n/**\r\n * @param {{text: string}} opt_data\r\n * @return {string}\r\n */\r\nfunction temp1(opt_data) {\r\n  return opt_data.text;\r\n}\r\n\r\n/**\r\n * @param {{activity: (boolean|number|string|null|Object)}} opt_data\r\n * @return {string}\r\n */\r\nfunction temp2(opt_data) {\r\n  /** @notypecheck */\r\n  function __inner() {\r\n    return temp1(opt_data.activity);\r\n  }\r\n  return __inner();\r\n}\r\n\r\n/**\r\n * @param {{n: number, text: string, b: boolean}} opt_data\r\n * @return {string}\r\n */\r\nfunction temp3(opt_data) {\r\n  return \u0027n: \u0027 + opt_data.n + \u0027, t: \u0027 + opt_data.text + \u0027.\u0027;\r\n}\r\n\r\nfunction callee() {\r\n  var output \u003d temp3({\r\n    n: 0,\r\n    text: \u0027a string\u0027,\r\n    b: true\r\n  })\r\n  alert(output);\r\n}\r\n\r\ncallee();\r\n\r\n\r\nyields:\r\nrepro.js:30: ERROR - actual parameter 1 of temp3 does not match formal parameter\r\nfound   : {b: boolean, n: number, text: (string|undefined)}\r\nrequired: {b: boolean, n: number, text: string}\r\n  var output \u003d temp3({\r\n\r\nIt seems like temp3 is actually being called with the right type {b: boolean, n: number, text: string} though it seems to think that text is a (string|undefined)\r\nThis seems to happen because of the seemingly unrelated code in functions temp1 and temp2. If I change the name of the text property (as in repro3.js) it works.\r\nAdditionally, if I fix the type of the activity property in the record type of temp2 it works (as in repro2.js)\r\n\r\nThis comes up in our codebase in some situations where we don\u0027t have type info for all the objects being passed into a function. It\u0027s always a tricky one to find because it reports an error at a location that looks correct.\r\n\r\n\r\n* it also fails with SIMPLE_OPTIMIZATIONS \r\n","timestamp":1333215566,"attachments":[{"id":7000000000,"fileName":"repro.js","fileSize":651},{"id":7000000001,"fileName":"repro3.js","fileSize":657},{"id":7000000002,"fileName":"repro2.js","fileSize":608}]},{"id":1,"commenterId":-7699928860083865744,"content":"thanks. the details help a lot.","timestamp":1333390495,"attachments":[]},{"id":2,"commenterId":1328304962299559429,"content":"This issue was closed by revision r1858.","timestamp":1333464943,"attachments":[]}]}