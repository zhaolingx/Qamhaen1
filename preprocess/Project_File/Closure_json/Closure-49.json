{"id":539,"status":"Fixed","summary":"Incorrect output if a function is assigned to a variable, and the function contains a variable with the same name","labels":["Type-Defect","Priority-Low"],"stars":0,"commentCount":4,"comments":[{"id":0,"commenterId":7153428347731157456,"content":"\u003cb\u003eWhat steps will reproduce the problem?\u003c/b\u003e\n\r\n 1. Enter the following into the online compiler\r\n\r\n  var foo \u003d function bar(){\r\n    var bar;\r\n    alert(bar)\r\n  };\r\n\r\n 2.  Compile using simple optimization\r\n\r\n\u003cb\u003eWhat is the expected output? What do you see instead?\u003c/b\u003e\n\r\n I\u0027d expect to see\r\n\r\n  var foo \u003d function() {\r\n    alert(void 0)\r\n  };\r\n\r\n Instead I see\r\n\r\n  var foo \u003d function bar() {\r\n    alert(bar)\r\n  };\r\n\r\n\u003cb\u003eWhat version of the product are you using? On what operating system?\u003c/b\u003e\n\r\n Using http://closure-compiler.appspot.com/home\r\n\r\n\u003cb\u003ePlease provide any additional information below.\u003c/b\u003e\n\r\n The compiled output is correct if you remove the \u0026quot;var foo \u003d\u0026quot; part, or if you rename the function from \u0026quot;bar\u0026quot; to something else.\r\n","timestamp":1314217877,"attachments":[]},{"id":1,"commenterId":-5060162230523776870,"content":"Thanks for the report.\r\n\r\nThis is a problem with how the compiler currently models the scope, which is overly simplistic.  The variable \"bar\" should shadow the function name but does not.\r\n\r\nWe can work around this by tweaking the local name normalization like we do for catch declarations or by removing the name from function expression (which is inaccessible).  The proper fix will likely wait until ES6 support with its lexically scoped declarations (let, const, function).","timestamp":1314225097,"attachments":[]},{"id":2,"commenterId":1328304962299559429,"content":"This issue was closed by revision r1552.","timestamp":1320362889,"attachments":[]},{"id":3,"commenterId":-7699928860083865744,"content":"Issue 597 has been merged into this issue.","timestamp":1321463130,"attachments":[]}]}