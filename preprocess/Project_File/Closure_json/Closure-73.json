{"id":416,"status":"Fixed","summary":"Codepoint U+007f appears raw in output","labels":["Type-Defect","Priority-Medium"],"stars":1,"commentCount":7,"comments":[{"id":0,"commenterId":102554887883123445,"content":"\u003cb\u003eWhat steps will reproduce the problem?\u003c/b\u003e\n1. Open http://closure-compiler.appspot.com/home in your browser\r\n2. Enter the source code: alert(\u0027\\x7f\u0027)\r\n3. Hit the \u0026quot;Compile\u0026quot; button.\r\n\r\nWhat is the expected output?\r\nalert(\u0026quot;\\x7f\u0026quot;)\r\n\r\nWhat do you see instead?\r\nalert(\u0026quot;\u0026quot;);\r\n\r\n\r\n\u003cb\u003eWhat version of the product are you using? On what operating system?\u003c/b\u003e\nThe version live on 11 April 2011.\r\n\r\n\u003cb\u003ePlease provide any additional information below.\u003c/b\u003e\nCodepoint U+007f is a delete control character and is the only non-printable ASCII codepoint that is not \u0026lt;\u003d U+0020.  http://www.fileformat.info/info/unicode/char/7f/index.htm\r\n\r\nIt should probably not appear raw in emitted source code because, it can confuse encoders.\r\n","timestamp":1302564418,"attachments":[]},{"id":1,"commenterId":-5060162230523776870,"content":"","timestamp":1302570832,"attachments":[]},{"id":2,"commenterId":-8276488392613077848,"content":"It go to the code, but is non-visible.\r\n\r\nalert(\u0027\\x7f\u0027); // Result will have 11 bytes\r\nalert(\u0027\u0027);     // Result will have 10 bytes","timestamp":1302576790,"attachments":[]},{"id":3,"commenterId":102554887883123445,"content":"Yes.  It is there.  U+007f is not a printable character, so it should probably not appear in the output the way U+001f does not appear raw in the output.","timestamp":1302585764,"attachments":[]},{"id":4,"commenterId":-5060162230523776870,"content":"I haven\u0027t commonly seen the \\x## encoding.  Is it consistently support by all browsers (by that I mean IE6-9, Chrome 10+, FF3+, Opera 11+, Safari 5)","timestamp":1302881919,"attachments":[]},{"id":5,"commenterId":102554887883123445,"content":"Closure compiler recognizes them just fine but does not seem to emit them.  The input\r\n\r\n    alert(\u0027\\u007f\u0027)\r\n\r\nproduces the same compiler output as\r\n\r\n    alert(\u0027\\x7f\u0027)\r\n\r\n\r\nSection 7.8.4 of the EcmaScript 3 spec defines EscapeSequence thus\r\n\r\nEscapeSequence ::\r\n    CharacterEscapeSequence\r\n    OctalEscapeSequence\r\n    HexEscapeSequence\r\n    UnicodeEscapeSequence\r\n...\r\nHexEscapeSequence ::\r\n    x HexDigit HexDigit\r\n\r\nEcmaScript 3 disallows OctalEscapeSequence (but allows it as an optional extension in an annex) but allows \\0 not followed by [0-9].","timestamp":1302896121,"attachments":[]},{"id":6,"commenterId":1328304962299559429,"content":"This issue was closed by revision r1014.","timestamp":1302916336,"attachments":[]}]}