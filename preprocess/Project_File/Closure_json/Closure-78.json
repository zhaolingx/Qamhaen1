{"id":381,"status":"Fixed","summary":"division by zero wrongly throws JSC_DIVIDE_BY_0_ERROR","labels":["Type-Defect","Priority-Medium"],"stars":2,"commentCount":6,"comments":[{"id":0,"commenterId":-5270297905096159288,"content":"\u003cb\u003eWhat steps will reproduce the problem?\u003c/b\u003e\n\r\nunaliased division by zero `1/0`\r\n\r\n\u003cb\u003eWhat is the expected output? What do you see instead?\u003c/b\u003e\n\r\nI expect minified code, but an error is thrown instead.\r\n\r\n\u003cb\u003eWhat version of the product are you using? On what operating system?\u003c/b\u003e\n\r\nappspot\r\n\r\n\u003cb\u003ePlease provide any additional information below.\u003c/b\u003e\n\r\nDivision by zero is a perfectly sane operation in ECMAScript. See 11.5.2 [0] of the ECMAScript 5 specification. Aliased division by zero `(n\u003d1)/0` is permitted.\r\n\r\n[0] http://es5.github.com/#x11.5.2","timestamp":1300227573,"attachments":[]},{"id":1,"commenterId":-5060162230523776870,"content":"In what way does this cause a problem?  \r\n\r\nGenerally, devision by zero is indicative of a programming error.  We could make it suppressible however.","timestamp":1300230489,"attachments":[]},{"id":2,"commenterId":-5270297905096159288,"content":"In ES3, `Infinity` is a writable variable, just like `undefined`. For these cases it\u0027s both safer and faster to generate the value rather than look for it in the scope chain. Because of this, `1/0`, `1/-0`, and `void 0` are common JS idioms.","timestamp":1300231012,"attachments":[]},{"id":3,"commenterId":-7699928860083865744,"content":"i also think this is a dumb error and has never solved any real problem.","timestamp":1300242626,"attachments":[]},{"id":4,"commenterId":-5060162230523776870,"content":"","timestamp":1300407210,"attachments":[]},{"id":5,"commenterId":-7699928860083865744,"content":"This issue was closed by revision r900.","timestamp":1300417861,"attachments":[]}]}