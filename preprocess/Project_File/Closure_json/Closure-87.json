{"id":291,"status":"Fixed","summary":"IE8 error: Object doesn\u0027t support this action","labels":["Type-Defect","Priority-Medium"],"stars":2,"commentCount":15,"comments":[{"id":0,"commenterId":-718334832621495367,"content":"\u003cb\u003eWhat steps will reproduce the problem?\u003c/b\u003e\n1. Use script with fragment like\r\n    if (e.onchange) {\r\n      e.onchange({\r\n        _extendedByPrototype: Prototype.emptyFunction,\r\n        target: e\r\n      });\r\n    }\r\n2. Compile with Compiler (command-line, latest version)\r\n3. Use in IE8\r\n\r\nWhat is the expected output?\r\nScript:\r\nif(b.onchange){b.onchange({_extendedByPrototype:Prototype.emptyFunction,target\r\n:b})}\r\n\r\nWhat do you see instead?\r\nScript:\r\nb.onchange\u0026amp;\u0026amp;b.onchange({_extendedByPrototype:Prototype.emptyFunction,target\r\n:b})\r\nIE8:\r\nError message \u0026quot;Object doesn\u0027t support this action\u0026quot;\r\n\r\n\u003cb\u003eWhat version of the product are you using? On what operating system?\u003c/b\u003e\nVersion: 20100917 (revision 440)\r\nBuilt on: 2010/09/17 17:55\r\n","timestamp":1291655138,"attachments":[]},{"id":1,"commenterId":-5060162230523776870,"content":"Can you provide more details here?  I\u0027m unable to reproduce a problem in IE8 with \"b.onchange \u0026\u0026 b.onchange(...\"","timestamp":1291666739,"attachments":[]},{"id":2,"commenterId":-718334832621495367,"content":"I use third-party javascript library, which assigns event handler to element.onchange property (e.g. $(\u0027id\u0027).onchange\u003dfunction(event){...}). In other part of library this onchange handler is invoked directly after changing content of element, using fake event object:\r\n\r\n  e.value \u003d \u0027some value\u0027;\r\n  if (e.onchange) {\r\n    e.onchange({\r\n      _extendedByPrototype: Prototype.emptyFunction,\r\n      target: e\r\n    });\r\n  }\r\n\r\nSo IE7 and IE8 (and maybe IE6) executes script\r\n  if (e.onchange) {e.onchange(...);}\r\nbut fires error \"Object doesn\u0027t support this action\" on optimized script\r\n  e.onchange\u0026\u0026e.onchange(...);\r\n","timestamp":1291711173,"attachments":[]},{"id":3,"commenterId":-5060162230523776870,"content":"Can you provide a small program that demonstrates this?\r\n\"e.onchange()\" should not be called in either case.  Maybe the problem is elsewhere?\r\n\r\nHere is what I used to try to reproduce the problem:\r\n\r\n\r\n\u003chtml\u003e\r\n\u003chead\u003e\r\n\u003cscript\u003e\r\nsetTimeout(function () {\r\n\r\nvar e \u003d document.getElementById(\u0027foo\u0027);\r\nif (e) {\r\n  alert(\u0027ok\u0027)\r\n}\r\n\r\nif (e.onchange \u0026\u0026 e.onchange({ext: function(){}, target: e})) {\r\n  alert(\u0027unexpected\u0027);\r\n} else {\r\n  alert(\u0027ok\u0027);\r\n}\r\n\r\ne.onchange \u003d function() {return true};\r\nif (e.onchange \u0026\u0026 e.onchange({ext: function(){}, target: e})) {\r\n  alert(\u0027ok\u0027);\r\n} else {\r\n  alert(\u0027unexpected\u0027);\r\n}\r\n\r\n}, 100);\r\n\u003c/script\u003e\r\n\u003c/head\u003e\r\n\u003cbody\u003e\r\n\r\n\u003cdiv id\u003d\"foo\"\u003e\u003c/div\u003e\r\n\r\nSome text.\r\n\r\n\u003c/body\u003e\r\n\u003c/html\u003e","timestamp":1291749399,"attachments":[]},{"id":4,"commenterId":4702807444149765156,"content":"Comment deleted","timestamp":1291897490,"attachments":[]},{"id":5,"commenterId":4702807444149765156,"content":"Comment 4 by lior.berry, Today (16 minutes ago)\r\n\r\nI encountered a similar error in IE 8, when trying to use swfobject.js (http://ajax.googleapis.com/ajax/libs/swfobject/2.1/swfobject.js) that I compiled with the closure compiler.\r\n\r\nI am getting the following error in IE8 only: \r\n\r\nMessage: Unexpected call to method or property access.\r\nLine: 10\r\nChar: 285\r\nCode: 0\r\nURI: http://myserveraddress/swfobject_2_1-compiled.js\r\n\r\nIf I use the non-compiled version of the script it works fine. In addition, compiling version 2.2 of swfobject.js also works fine, so maybe diffing the two versions can help you narrow down the problem\r\n\r\nThis is the html code I use:\r\n\r\n\u003chtml\u003e\r\n\u003chead\u003e\r\n\u003cscript src\u003d\"./swfobject_2_1-compiled.js\" type\u003d\"text/javascript\"\u003e\u003c/script\u003e\r\n\u003c/head\u003e\r\n\u003cbody\u003e\r\n\u003ch1\u003etesting ...\u003c/h1\u003e\r\n\u003cscript type\u003d\"text/javascript\"\u003e \r\nswfobject.embedSWF(\"player.swf\",\"player_placeholder\", \"480\", \"360\", \"9.0.115\", false,\r\n{}, {},{});\r\n\u003c/script\u003e\r\n\u003c/body\u003e\r\n\u003c/html\u003e\r\n","timestamp":1291898511,"attachments":[]},{"id":6,"commenterId":-718334832621495367,"content":"Here is an example (clicking on \u0027Test\u0027 button causes error in IE6-8):\r\n\r\n\u003c!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"\u003e\r\n\u003chtml xmlns\u003d\"http://www.w3.org/1999/xhtml\"\u003e\r\n  \u003chead\u003e\r\n    \u003cmeta http-equiv\u003d\"Content-Type\" content\u003d\"text/html; charset\u003dutf-8\" /\u003e\r\n    \u003ctitle\u003eonchange\u003c/title\u003e\r\n    \u003cscript type\u003d\"text/javascript\"\u003e\r\n      function testOnchange() {\r\n        var s \u003d document.getElementById(\"select\");\r\n        s \u0026\u0026\r\n        s.onchange({\r\n          ext: function() {\r\n          },\r\n          target: s\r\n        });\r\n      }\r\n    \u003c/script\u003e\r\n  \u003c/head\u003e\r\n  \u003cbody\u003e\r\n    \u003cform id\u003d\"form\" action\u003d\"#\"\u003e\r\n      \u003cselect id\u003d\"select\"\u003e\r\n        \u003coption\u003e1\u003c/option\u003e\r\n        \u003coption\u003e2\u003c/option\u003e\r\n      \u003c/select\u003e\r\n      \u003cinput type\u003d\"button\" value\u003d\"Test\" onclick\u003d\"testOnchange();\"/\u003e\r\n    \u003c/form\u003e\r\n    \u003cscript type\u003d\"text/javascript\"\u003e\r\n      var s \u003d document.getElementById(\"select\");\r\n      s.onchange \u003d function(e) {\r\n        alert(\"Changed to \" + e.target.value);\r\n      };\r\n    \u003c/script\u003e\r\n  \u003c/body\u003e\r\n\u003c/html\u003e\r\n","timestamp":1292256639,"attachments":[]},{"id":7,"commenterId":-5060162230523776870,"content":"Maybe specific to the \"select\" element in IE.","timestamp":1292293253,"attachments":[]},{"id":8,"commenterId":-718334832621495367,"content":"And what to do now?\r\n\r\nUse older versions of compiler (and wait for new release)?\r\n\r\nDo not use compiler at all (you\u0027ll never fix it)?\r\n\r\nOr somehow tell him not to \"optimize\" expressions of type \"if (object.method){object.method();}\"?","timestamp":1292326587,"attachments":[]},{"id":9,"commenterId":-718334832621495367,"content":"By the way, it happens not only on select fields - also on text inputs (input type\u003d\"text\").","timestamp":1292326784,"attachments":[]},{"id":10,"commenterId":-7699928860083865744,"content":"I\u0027m not convinced that it\u0027s as simple as escaping that one optimization. I think we need to have a better handle on why IE does this, so we know how to work around it in other cases.","timestamp":1292339659,"attachments":[]},{"id":11,"commenterId":-7699928860083865744,"content":"i\u0027ve narrowed vkhomyackov\u0027s testOnchange down to this:\r\n    \u003cscript type\u003d\"text/javascript\"\u003e\r\n      function testOnchange() {\r\n        var s \u003d document.getElementById(\"select\");\r\n        1 \u0026\u0026 s.onchange({});\r\n      }\r\n    \u003c/script\u003e\r\n\r\nthe \"1 \u0026\u0026\" and the object literal are both necessary. removing the bug go away. Notably, the bug does not appear if you have:\r\n\r\n        1 \u0026\u0026 (s.onchange({}), 0);\r\n\r\nSomehow it\u0027s contingent on the return value of s.onchange being consumed by another expression. The bug also reproduces if you have:\r\n\r\n        return s.onchange({});","timestamp":1292340733,"attachments":[]},{"id":12,"commenterId":-7699928860083865744,"content":"after a few more tests, here\u0027s my half-assed theory of what\u0027s happening:\r\n\r\nIn IE, Nodes are implemented as COM objects. I assume that these COM objects have some special logic for event handler properties (like \u0027onchange\u0027), because foo.onchange \u003d \"some string\"; will convert the string into a function. So perhaps they have some internal pointers to those functions.\r\n\r\nLet\u0027s also suppose that COM objects have some logic for doing overloaded method dispatch.\r\n\r\nFor some reason, calling s.onchange({}) and using its return value triggers a bug in the overloaded method dispatcher, which makes it call native method, instead of the method on the internal pointer.\r\n\r\nAgain, this is all very much guess-work, and is probably wrong on some key points (if not all of them). But the explanation is consistent with the behavior I\u0027m seeing. It only happens when both the return value and parameter are used (regardless of what they are or how they\u0027re used), and I can\u0027t repro with any methods that aren\u0027t event handlers.\r\n\r\nIt may be enough to add a shim to check for this specific case.\r\n\r\nFortunately, the bug is not in IE9. But if I ever run into one of the IE engineers i may ask them about it.","timestamp":1292357633,"attachments":[]},{"id":13,"commenterId":-7699928860083865744,"content":"This issue was closed by revision r631.","timestamp":1292423259,"attachments":[]},{"id":14,"commenterId":-5060162230523776870,"content":"Issue 371 has been merged into this issue.","timestamp":1299276447,"attachments":[]}]}