{"id":261,"status":"Fixed","summary":"bug with implicit namespaces across modules","labels":["Type-Defect","Priority-Medium"],"stars":2,"commentCount":5,"comments":[{"id":0,"commenterId":-2020703049423688535,"content":"If there are three modules, the latter two of which depend on the root module:\r\n\r\n// Module A\r\ngoog.provide(\u0027apps\u0027);\r\n\r\n// Module B\r\ngoog.provide(\u0027apps.foo.bar.B\u0027);\r\n\r\n// Module C\r\ngoog.provide(\u0027apps.foo.bar.C\u0027);\r\n\r\nand this is compiled in SIMPLE_OPTIMIZATIONS mode, the following code will be produced:\r\n\r\n// Module A\r\nvar apps\u003d{};apps.foo.bar\u003d{};apps.foo\u003d{};\r\n\r\n// Module B\r\napps.foo.bar.B\u003d{};\r\n\r\n// Module C\r\napps.foo.bar.C\u003d{};\r\n\r\nThis will result in a runtime error in Module A because apps.foo.bar is assigned before apps.foo.\r\n\r\nThe patch for the fix (with regression test) is available at:\r\nhttp://codereview.appspot.com/2416041\r\n\r\n","timestamp":1286650989,"attachments":[{"id":-2932430519864802879,"fileName":"issue2416041_1.diff","fileSize":3212}]},{"id":1,"commenterId":-2020703049423688535,"content":"Upon further inspection, I do not believe that the patch I supplied is a complete fix. I need to come up with a slightly more complex test case to demonstrate the incompleteness.\r\n","timestamp":1286654850,"attachments":[]},{"id":2,"commenterId":-2020703049423688535,"content":"Actually, upon further further inspection, the patch works for me EXCEPT if you have a goog.provide() for something that is a typedef that is not assigned to anything (and therefore, isn\u0027t really provided).\r\n\r\nIf I remove the goog.provide(), then I\u0027m fine.","timestamp":1286655471,"attachments":[]},{"id":3,"commenterId":-7699928860083865744,"content":"","timestamp":1286812533,"attachments":[]},{"id":4,"commenterId":-7699928860083865744,"content":"This issue was closed by revision r491.","timestamp":1287185702,"attachments":[]}]}